@using PurchasingSystem.Areas.MasterData.Models;
@using PurchasingSystem.Areas.MasterData.ViewModels;
@using PurchasingSystem.Repositories;

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var photoPath = "~/UserPhoto/" + (Model.UserActiveViewModels.UserPhotoPath ?? "user.jpg");
}

@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager
@model Dashboard

<!-- Main content -->
<section class="container-fluid">    
    <div class="row">
        <div class="col-12">
            <!-- Widget: user widget style 1 -->
            <div class="card card-widget widget-user">
                <!-- Add the bg color to the header using any of the bg-* classes -->
                <div class="widget-user-header bg-info">
                    <h1 class="widget-user-username"><b>@ViewBag.Title</b></h1>
                </div>                
            </div>
            <!-- /.widget-user -->
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 bg-white">
            <div class="card">
                <div class="card-header bg-indigo">
                    <h3 class="card-title fw-bold" style="color:#ffffff">@Html.DisplayFor(m => m.UserActiveViewModels.FullName)</h3>
                </div>
                <div class="card-body text-center">
                    <img src="@photoPath" asp-append-version="true" width="100%" height="100%" />
                </div>

                <div class="card-body">
                    <ul class="list-group list-group-unbordered mb-3">
                        <li class="list-group-item">
                            <b>Date Of Birth</b> <a class="float-right">@Model.UserActiveViewModels.DateOfBirth.ToString("dd MMMM yyyy")</a>
                        </li>
                        <li class="list-group-item">
                            <b>Department</b> <a class="float-right">@Html.DisplayFor(x => x.UserActiveViewModels.Department)</a>
                        </li>
                        <li class="list-group-item">
                            <b>Position</b> <a class="float-right">@Html.DisplayFor(s => s.UserActiveViewModels.Position)</a>
                        </li>
                        <li class="list-group-item">
                            <b>Handphone</b> <a class="float-right">@Html.DisplayFor(s => s.UserActiveViewModels.Handphone)</a>
                        </li>
                        <li class="list-group-item">
                            <b>Email</b> <a class="float-right">@Html.DisplayFor(s => s.UserActiveViewModels.Email)</a>
                        </li>
                    </ul>
                </div>
            </div>            

            <div class="card">
                <div class="card-header bg-indigo">
                    <h3 class="card-title fw-bold" style="color:#ffffff">User Online</h3>
                </div>
                <div class="card-body table-responsive p-0">
                    <table id="tblTemplate2" class="table table-hover table-head-fixed text-nowrap">
                        <thead>
                            <tr>
                                <th class="text-left" style="width: 5%;">Name</th>
                                <th class="text-left" style="width: 5%;">Status</th>
                            </tr>
                        </thead>
                        <tbody id="show_data">
                            @foreach (var user in Model.UserOnlines)
                            {
                                <tr>
                                    <td class ="text-left">@user.NamaUser</td>
                                    @if (@user.IsOnline == true)
                                    {
                                        <td class="text-left"><i class='fas fa-circle' style='color:greenyellow'></i> Online</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-9 bg-white">
            <div class="card-header bg-indigo">
                <h3 class="card-title fw-bold" style="color:#ffffff">Detail Information</h3>
            </div>
            
            <div class="row">
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #347FC4">
                            <i class="fa-solid fa-globe" style="color:white"></i> 
                        </span>
                        <div class="info-box-content">
                            <span class="info-box-text">User Online</span> <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.UserOnline
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #E53D00">
                            <i class="fas fa-file-alt" style="color: white"></i>
                        </span>
                        <div class="info-box-content"> <span class="info-box-text">Purchase Request</span> 
                            <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountPurchaseRequest
                            </span> 
                         </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #FFE900">
                            <i class="fas fa-file-archive" style="color: white"></i>
                        </span>
                        <div class="info-box-content"> <span class="info-box-text">Purchase Order</span> 
                            <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountPurchaseOrder
                            </span> 
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #F7C1BB">
                            <i class="fa-solid fa-file-circle-check" style="color: white"></i>
                        </span>
                        <div class="info-box-content"> <span class="info-box-text">Approval</span> 
                            <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountApproval
                            </span> 
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #84B082">
                            <i class="fas fa-clipboard" style="color:white"></i>
                        </span>
                        <div class="info-box-content">
                            <span class="info-box-text">Unit Request</span> <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountUnitRequest
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #F7C1BB">
                            <i class="fa-solid fa-file-pen" style="color: white"></i>
                        </span>
                        <div class="info-box-content">
                            <span class="info-box-text">Receive Order</span> <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountReceiveOrder
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #347FC4">
                            <i class="fa-solid fa-truck-fast" style="color: white"></i>
                        </span>
                        <div class="info-box-content">
                            <span class="info-box-text">Approval Unit Request</span> <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountApprovalUnitRequest
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon shadow-sm" style="background-color: #E53D00">
                            <i class="fa-solid fa-file-circle-check" style="color: white"></i>
                        </span>
                        <div class="info-box-content">
                            <span class="info-box-text">Warehouse Transfer</span> <span class="info-box-number" style="margin-top: -10px;">
                                @ViewBag.CountWarehouseTransfer
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Stock Product</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartPie"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-stock"></h4>
                                                <span>Total Stock</span>
                                            </div>
                                            <div class="text-center">
                                                <div class="d-flex">
                                                    <h4 id="stock-masuk"></h4>
                                                    &nbsp;
                                                    <i class="fa-solid fa-arrow-up fs-6 text-primary mt-2"></i>
                                                </div>
                                                <span>Stock Masuk</span>
                                            </div>
                                            <div class="text-center">
                                                <div class="d-flex">
                                                    <h4 id="stock-keluar"></h4>
                                                    &nbsp;
                                                    <i class="fa-solid fa-arrow-down fs-6 text-danger mt-2"></i>
                                                </div>
                                                <span>Stock Keluar</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Purchase Request</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartMonitoringPRByExpired"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-pr"></h4>
                                                <span>Total PR</span>
                                            </div>
                                            <div class="text-center">
                                                <div class="d-flex">
                                                    <h4 id="onprocess-pr"></h4>
                                                    &nbsp;
                                                    <i class="fa-solid fa-circle fs-6 text-warning mt-2"></i>
                                                </div>
                                                <span>Stock Waiting PR</span>
                                            </div>
                                            <div class="text-center">
                                                <div class="d-flex">
                                                    <h4 id="finish-pr"></h4>
                                                    &nbsp;
                                                    <i class="fa-solid fa-circle fs-6 mt-2" style="color: #00E396"></i>
                                                </div>
                                                <span>Stock PO</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Purchase Order</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartStatusPie"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-po"></h4>
                                                <span>Total Purchase Order</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Approve PR</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartPRApprove"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-pr-status"></h4>
                                                <span>Total Purchase Request</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Approve Unit Request</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartUnitRequestApprove"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-unit-request"></h4>
                                                <span>Total Unit Request</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-header bg-indigo">
                            <h3 class="card-title fw-bold" style="color:#ffffff">Monitoring Approve Qty Difference</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="p-4" id="chartQtyDiffApprove"></div>
                            <div class="p-3" style="margin-top: -18%;">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-start">
                                                <h4 id="total-qty-diff"></h4>
                                                <span>Total Quantity Different</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>            
        </div>
    </div>    
</section>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <!-- /.content -->
    <script>
        $(document).ready(function () {
            get_monitoring();
            get_status();
            get_pr_by_expired();
            get_pr_by_status();
            get_unit_request_monitoring();
            get_qty_diff_monitoring();
            $('#table-medicine').DataTable({
                pageLength: 9 // Menampilkan 10 baris per halaman
            });
        });

                function get_monitoring() {
            $.get('@Url.Action("GetMonitoringProduct")', function (r) {
                console.log(r);
                let UnderMinstock = (r.warning == undefined) ? 0 : r.warning ;
                let AboveMinstock = (r.save == undefined) ? 0 : r.save;
                let NotInitialized = (r.notinitialized == undefined) ? 0 : r.notinitialized;
                let GetDataQtyMasuk = (r.dataReceived[0] == undefined) ? 0 : r.dataReceived[0];
                let validationQty = (GetDataQtyMasuk == 0) ? 0 : GetDataQtyMasuk.dataReceivedOrderDetail;
                let QtyMasuk = (validationQty == undefined) ? 0 : GetDataQtyMasuk.dataReceivedOrderDetail;
                let StockKeluar = (r.StockKeluar == undefined) ? 0 : r.StockKeluar;
                let TotalStock = (r.totalStock == undefined) ? 0 : r.totalStock;
                $("#stock-keluar").text(StockKeluar);
                $("#stock-masuk").text(QtyMasuk);
                $("#total-stock").text(TotalStock);

                let serie = [];
                let label = [];
                let color = [];

                if (UnderMinstock == 0 && AboveMinstock == 0 && NotInitialized == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [NotInitialized, UnderMinstock, AboveMinstock];
                    label = ['Belum di Inisialisasi', 'Dibawah Minimal Stok', 'Diatas Minimal Stok'];
                    color = ['#E53D00', '#FFE900', '#00E396'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if(UnderMinstock == 0 && AboveMinstock == 0 && NotInitialized == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex];
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (UnderMinstock == 0 && AboveMinstock == 0 && NotInitialized == 0) {
                                    return '';
                                } else {
                                    return val + " units";
                                } // Menampilkan nilai asli di tooltip
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            },
                            dataLabels: {
                                offset: -10 // Menyesuaikan posisi label agar berada di atas segmen
                            }
                        }
                    },
                    legend: {
                        position: 'top' // Posisi legend di bawah
                    }
                };

                // Inisialisasi dan render chart
                var chart = new ApexCharts(document.querySelector("#chartPie"), options);
                chart.render();
            })
        }



                function get_pr_by_expired() {
            $.get('@Url.Action("GetMonitoringByExpired")', function (r) {
                let waiting = (r.waiting == undefined) ? 0 : r.waiting;
                let rejected = (r.rejected == undefined) ? 0 : r.rejected;
                let completed = (r.completed == undefined) ? 0 : r.completed;
                let totalPRData = (r.totalPRData == undefined) ? 0 : r.totalPRData;
                let onProcessStock = (r.onProcessStock == undefined) ? 0 : r.onProcessStock;
                let finishProcessStock = (r.finishProcess == undefined) ? 0 : r.finishProcess;
                $("#total-pr").text(totalPRData);
                $("#onprocess-pr").text(onProcessStock);
                $("#finish-pr").text(finishProcessStock);

                let serie = [];
                let label = [];
                let color = [];

                if (waiting == 0 && rejected == 0 && completed == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [waiting, rejected, completed];
                    label = ['Status PR Waiting', 'Status PR Rejected', 'Status PR Completed'];
                    color = ['#FFE900', '#E53D00', '#00E396'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if (waiting == 0 && rejected == 0 && completed == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex]; // Menampilkan nilai asli
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (waiting == 0 && rejected == 0 && completed == 0) {
                                    return '';
                                } else {
                                    return val + " units"; // Menampilkan nilai asli di tooltip
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            },
                            dataLabels: {
                                offset: -10 // Menyesuaikan posisi label agar berada di atas segmen
                            }
                        }
                    },
                    legend: {
                        position: 'top' // Posisi legend di bawah
                    }
                };

                // Inisialisasi dan render chart
                var chart = new ApexCharts(document.querySelector("#chartMonitoringPRByExpired"), options);
                chart.render();
            })
        }


                function get_status() {
            $.get('@Url.Action("GetMonitoringStatus")', function (r) {
                let inorder = (r.inorder == undefined) ? 0 : r.inorder;
                let completed = (r.completed == undefined) ? 0 : r.completed;
                let cancelled = (r.cancelled == undefined) ? 0 : r.cancelled;
                $("#total-po").text(r.totalPO);

                let serie = [];
                let label = [];
                let color = [];

                if(inorder == 0 && completed == 0 && cancelled == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [inorder, completed, cancelled];
                    label = ['PO Status Inorder', 'PO Status Completed', 'PO Status Cancelled'];
                    color = ['#FFE900', '#00E396', '#E53D00'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455,
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if (inorder == 0 && completed == 0 && cancelled == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex]; // Menampilkan nilai asli
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (inorder == 0 && completed == 0 && cancelled == 0) {
                                    return '';
                                } else {
                                    return val + " units"; // Menampilkan nilai asli di tooltip
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            }
                        }
                    },
                    legend: {
                        position: 'top', // Posisi legend di bawah
                    }
                };

                var chart = new ApexCharts(document.querySelector("#chartStatusPie"), options);
                chart.render();
            })
        }


                function get_pr_by_status() {
            $.get('@Url.Action("GetPRByApprove")', function (r) {
                let waiting = (r.waiting == undefined) ? 0 : r.waiting;
                let rejected = (r.rejected == undefined) ? 0 : r.rejected;
                let completed = (r.completed == undefined) ? 0 : r.completed;
                let totalPRData = (r.totalPRData == undefined) ? 0 : r.totalPRData;
                $("#total-pr-status").text(totalPRData);

                let serie = [];
                let label = [];
                let color = [];

                if (waiting == 0 && rejected == 0 && completed == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [waiting, rejected, completed];
                    label = ['Waiting', 'Rejected', 'Completed'];
                    color = ['#FFE900', '#E53D00', '#00E396'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if(waiting == 0 && rejected == 0 && completed == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex]; // Menampilkan nilai asli
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (waiting == 0 && rejected == 0 && completed == 0) {
                                    return '';
                                } else {
                                    return val + " units"; // Menampilkan nilai asli di tooltip
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            },
                            dataLabels: {
                                offset: -10 // Menyesuaikan posisi label agar berada di atas segmen
                            }
                        }
                    },
                    legend: {
                        position: 'top' // Posisi legend di bawah
                    }
                };

                // Inisialisasi dan render chart
                var chart = new ApexCharts(document.querySelector("#chartPRApprove"), options);
                chart.render();
            })
        }


                function get_unit_request_monitoring() {
            $.get('@Url.Action("GetUnitRequestMonitoring")', function (r) {
                let waiting = (r.waiting == undefined) ? 0 : r.waiting;
                let rejected = (r.rejected == undefined) ? 0 : r.rejected;
                let completed = (r.completed == undefined) ? 0 : r.completed;
                let totalUnitRequest = (r.totalUnitRequest == undefined) ? 0 : r.totalUnitRequest;
                $("#total-unit-request").text(totalUnitRequest);

                let serie = [];
                let label = [];
                let color = [];

                if (waiting == 0 && rejected == 0 && completed == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [waiting, rejected, completed];
                    label = ['Waiting', 'Rejected', 'Completed'];
                    color = ['#FFE900', '#E53D00', '#00E396'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if (waiting == 0 && rejected == 0 && completed == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex]; // Menampilkan nilai asli
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (waiting == 0 && rejected == 0 && completed == 0) {
                                    return '';
                                } else {
                                    return val + " units"; // Menampilkan nilai asli di tooltip
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            },
                            dataLabels: {
                                offset: -10 // Menyesuaikan posisi label agar berada di atas segmen
                            }
                        }
                    },
                    legend: {
                        position: 'top' // Posisi legend di bawah
                    }
                };

                // Inisialisasi dan render chart
                var chart = new ApexCharts(document.querySelector("#chartUnitRequestApprove"), options);
                chart.render();
            })
        }


                function get_qty_diff_monitoring() {
            $.get('@Url.Action("GetQtyDiffMonitoring")', function (r) {
                let waiting = (r.waiting == undefined) ? 0 : r.waiting;
                let rejected = (r.rejected == undefined) ? 0 : r.rejected;
                let completed = (r.completed == undefined) ? 0 : r.completed;
                let totalQtyDiff = (r.totalQtyDiff == undefined) ? 0 : r.totalQtyDiff;
                $("#total-qty-diff").text(totalQtyDiff);

                let serie = [];
                let label = [];
                let color = [];

                if (waiting == 0 && rejected == 0 && completed == 0) {
                    serie = [100];
                    label = ['Data Kosong'];
                    color = ['#808080'];
                } else {
                    serie = [waiting, rejected, completed];
                    label = ['Waiting', 'Rejected', 'Completed'];
                    color = ['#FFE900', '#E53D00', '#00E396'];
                }

                var options = {
                    chart: {
                        type: 'donut', // Tipe chart donut
                        height: 455
                    },
                    series: serie, // Data nilai
                    labels: label, // Label kategori
                    colors: color,
                    dataLabels: {
                        enabled: true, // Aktifkan data labels
                        style: {
                            fontSize: '14px', // Ukuran font data labels
                            fontWeight: 'bold'
                        },
                        dropShadow: {
                            enabled: true // Tambahkan efek bayangan
                        },
                        formatter: function (val, opts) {
                            if (waiting == 0 && rejected == 0 && completed == 0) {
                                return '';
                            } else {
                                return opts.w.config.series[opts.seriesIndex]; // Menampilkan nilai asli
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                if (waiting == 0 && rejected == 0 && completed == 0) {
                                    return '';
                                } else {
                                    return val + " units"; // Menampilkan nilai asli di tooltip
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            donut: {
                                size: '65%' // Ukuran lubang tengah
                            },
                            dataLabels: {
                                offset: -10 // Menyesuaikan posisi label agar berada di atas segmen
                            }
                        }
                    },
                    legend: {
                        position: 'top' // Posisi legend di bawah
                    }
                };

                // Inisialisasi dan render chart
                var chart = new ApexCharts(document.querySelector("#chartQtyDiffApprove"), options);
                chart.render();
            })
        }
    </script>
    <style>

        * {
            margin: 0;
            padding: 0;
            font-family: 'Roboto',sans-serif;
        }

        .box {
            background: #fff;
            width: 260px;
            height: 212px;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            flex-direction: column;
            box-shadow: 0 30px 60px rgba(0,0,0,.4);
            transition: transform .2s;
        }
            /* .box:hover
                    {
                     transform:scale(1.2);
                    } */
            .box .percent {
                width: 150px;
                height: 150px;
                position: relative;
            }

                .box .percent svg {
                    width: 150px;
                    height: 150px;
                    position: relative;
                }

                    .box .percent svg circle {
                        width: 150px;
                        height: 150px;
                        fill: none;
                        stroke-width: 10;
                        stroke: #000;
                        transform: translate(5px,5px);
                        stroke-dasharray: 440;
                        stroke-dashoffset: 440;
                        stroke-linecap: round;
                    }

                        .box .percent svg circle:nth-child(1) {
                            stroke-dashoffset: 0;
                            stroke: #f3f3f3;
                        }

                        .box .percent svg circle:nth-child(2) {
                            stroke-dashoffset: calc(440 - (440 * 87) / 100);
                            stroke: #03a9f4;
                        }

                .box .percent .num {
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    position: absolute;
                    color: #111;
                }

                    .box .percent .num h2 {
                        font-size: 48px;
                    }

                        .box .percent .num h2 span {
                            font-size: 24px;
                        }

            .box .text {
                padding 10px 0 0;
                color: #999;
                font-weight: 700;
                letter-spacing: 1px;
            }

        .small-text {
            font-size: 12px;
        }

        .large-text {
            font-size: 24px;
        }

    </style>
}