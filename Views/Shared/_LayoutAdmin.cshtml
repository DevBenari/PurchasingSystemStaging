﻿@using Microsoft.AspNetCore.Identity;
@using PurchasingSystem.Models;

@{
    var listRole = Context.Session.GetString("ListRole");
    @inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager

}

<!DOCTYPE html>

<html>
<head>
    <link rel="icon" type="image" href="~/favicon.ico">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/admin/plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/admin/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="~/admin/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- JQVMap -->
    <link rel="stylesheet" href="~/admin/plugins/jqvmap/jqvmap.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/admin/dist/css/adminlte.min.css">
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="~/admin/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="~/admin/plugins/daterangepicker/daterangepicker.css">
    <!-- summernote -->
    <link rel="stylesheet" href="~/admin/plugins/summernote/summernote-bs4.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="~/admin/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/admin/plugins/select2/css/select2.css" rel="stylesheet" />
    <link href="~/admin/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/admin/plugins/select2-bootstrap4-theme/select2-bootstrap4.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/2.0.1/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

    <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <link media="screen" rel="stylesheet" href="https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.min.css" />
    <link media="screen" rel="stylesheet" href='https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.css' />
    <script type="text/javascript" src="https://cdn.jsdelivr.net/sweetalert2/6.3.8/sweetalert2.min.js"></script>

    @*Fontawesome Jquery*@
    <script src="https://kit.fontawesome.com/c3423d6308.js" crossorigin="anonymous"></script>
</head>
<body class="hold-transition sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed">
    <div class="wrapper">

        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__wobble" src="~/admin/dist/img/logo-loader-mmc.png" alt="PurchasingApps" height="60" width="60">
        </div>

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>
                @if (signInManager.IsSignedIn(User))
                {
                    var user = await signInManager.UserManager.FindByNameAsync(User.Identity.Name);

                        <li class="nav-item">
                            <a class="nav-link" role="button">
                                <p>Halo, @(User.FindFirst("NamaUser").Value)</p>
                            </a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" role="button">
                            @if (user.IsOnline == true)
                            {
                                <p><i class='fas fa-circle' style='color:greenyellow'></i> Online</p>
                            }
                            </a>
                        </li>
                }                
            </ul>

            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">

                <!-- Messages Dropdown Menu -->
                <li class="nav-item dropdown">
                    @if (User.Identity.Name == "superadmin@admin.com")
                    {
                        <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right" style="max-height: 400px; max-width: 400px; overflow-y: auto;" id="loggerContainer" hidden></div>
                    }
                    else
                    {
                            <a class="nav-link" data-toggle="dropdown" href="#">
                                <i class="far fa-bell"></i>
                                <span class="badge badge-danger navbar-badge" id="notifikasiCount"></span>
                            </a>
                            <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right" style="max-height: 400px; max-width: 400px; overflow-y: auto;" id="loggerContainer"></div>
                    }                    
                </li>

                <!-- Navbar Search -->
                @if (signInManager.IsSignedIn(User))
                {
                    var user = await signInManager.UserManager.FindByNameAsync(User.Identity.Name);
                    
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Setting
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <form asp-action="MyProfile" asp-controller="Home" class="form-inline">
                                <button type="submit" class="nav-link btn btn-link">
                                    <p><i class="fas fa-user-circle mr-2"></i>My Profile</p>
                                </button>
                            </form>
                            <form asp-action="Logout" asp-controller="Account" class="form-inline">
                                <button type="submit" class="nav-link btn btn-link">
                                    <p><i class="fas fa-power-off mr-2"></i>Sign Out</p>
                                </button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        </nav>
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4" style="background-color:#347FC4">
            <!-- Brand Logo -->
            <a href="#" class="brand-link">
                @*<img src="~/admin/dist/img/logo-mmc-dashboard.jpg" class="brand-image" style="opacity: .8" />*@
                <span class="logo-mini"><b>RS</b></span>
                <span class="brand-text fw-bold" style="color:#FFFFFF">MMC</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar Menu -->
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <!-- Add icons to the links using the .nav-icon class
                             with font-awesome or any other icon font library -->
                        @if (User.Identity.Name == "superadmin@admin.com")
                        {
                            <li class="@(ViewBag.Active == "Dashboard" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Home")">
                                    <i class="nav-icon fas fa-home" style="color:#FFFFFF"></i> <p>Dashboard</p>
                                </div>
                            </li>
                            <li class="nav-header">Setup</li>
                            <li class="@(ViewBag.Active == "Administrator" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "Administrator" })">
                                    <i class="nav-icon fas fa-monument" style="color:#FFFFFF"></i> <p>Administrator</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "MasterData" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "MasterData" })">
                                    <i class="nav-icon fas fa-table" style="color:#FFFFFF"></i> <p>Master Data</p>
                                </div>
                            </li>
                            <li class="nav-header">Purchasing</li>
                            <li class="@(ViewBag.Active == "PurchaseRequest" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "PurchaseRequest", new { area = "Order" })">
                                    <i class="nav-icon fas fa-cart-plus" style="color:#FFFFFF"></i> <p>Purchase Request</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "ApprovalPurchaseRequest" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalPurchaseRequest", new { area = "Order" })">
                                    <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Purchase Req</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "PurchaseOrder" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "PurchaseOrder", new { area = "Order" })">
                                    <i class="nav-icon fas fa-shopping-bag" style="color:#FFFFFF"></i> <p>Purchase Order</p>
                                </div>
                            </li>
                            <li class="nav-header">Pharmacy</li>
                            <li class="@(ViewBag.Active == "UnitRequest" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "UnitRequest", new { area = "Transaction" })">
                                    <i class="nav-icon fas fa-first-aid" style="color:#FFFFFF"></i> <p>Unit Request</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "ApprovalUnitRequest" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalUnitRequest", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Unit Request</p>
                                </div>
                            </li>
                            <li class="nav-header">Warehouse Management</li>
                            <li class="@(ViewBag.Active == "ReceiveOrder" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ReceiveOrder", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-box-open" style="color:#FFFFFF"></i> <p>Receive Order</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "QtyDifference" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "QtyDifference", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-truck-loading" style="color:#FFFFFF"></i> <p>Qty Difference</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "ApprovalQtyDifference" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalQtyDifference", new { area = "Order" })">
                                    <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Qty Difference</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "UnitOrder" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "UnitOrder", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-calculator" style="color:#FFFFFF"></i> <p>Unit Order</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "WarehouseTransfer" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "WarehouseTransfer", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-people-carry" style="color:#FFFFFF"></i> <p>Warehouse Transfer</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "ProductReturn" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ProductReturn", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-dolly" style="color:#FFFFFF"></i> <p>Product Return</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "ApprovalProductReturn" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalProductReturn", new { area = "Warehouse" })">
                                    <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Product Return</p>
                                </div>
                            </li>
                            <li class="nav-header">General</li>
                            <li class="@(ViewBag.Active == "StockMonitoring" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "StockMonitoring", new { area = "General" })">
                                    <i class="nav-icon fas fa-clipboard-list" style="color:#FFFFFF"></i> <p>Stock Monitoring</p>
                                </div>
                            </li>
                            <li class="@(ViewBag.Active == "KeyPerformanceIndikator" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "KeyPerformanceIndicator", new { area = "Order" })">
                                    <i class="nav-icon fa-solid fa-key" style="color:#FFFFFF"></i> <p>Key Performance Indicator</p>
                                </div>
                            </li>
                            <li class="nav-header">Reporting</li>
                            <li class="@(ViewBag.Active == "Report" ? "nav-item menu-open active":"")">
                                <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "Report" })">
                                    <i class="nav-icon fas fa-file-alt" style="color:#FFFFFF"></i> <p>Report</p>
                                </div>
                            </li>
                        }
                        else
                        {
                            @if (!string.IsNullOrEmpty(listRole))
                            {
                                var roles = listRole.Split(',');
                                <li class="@(ViewBag.Active == "Dashboard" ? "nav-item menu-open active":"")">
                                    <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Home")">
                                        <i class="nav-icon fas fa-home" style="color:#FFFFFF"></i> <p>Dashboard</p>
                                    </div>
                                </li>

                                if (roles.Contains("ReadDepartment") || roles.Contains("ReadPosition") || roles.Contains("ReadUserActive") || roles.Contains("ReadSupplier") || roles.Contains("ReadProduct") || roles.Contains("ReadTermOfPayment") || roles.Contains("ReadBank") || roles.Contains("ReadUnitLocation") || roles.Contains("ReadWarehouseLocation") || roles.Contains("ReadLeadTime") || roles.Contains("ReadInitialStock"))
                                {
                                    <li class="nav-header">Setup</li>                                   
                                }

                                if (roles.Contains("ReadGroupRole") || roles.Contains("ReadApi"))
                                {
                                    <li class="@(ViewBag.Active == "Administrator" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "Administrator" })">
                                            <i class="nav-icon fas fa-monument" style="color:#FFFFFF"></i> <p>Administrator</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadDepartment") || roles.Contains("ReadPosition") || roles.Contains("ReadUserActive") || roles.Contains("ReadSupplier") || roles.Contains("ReadProduct") || roles.Contains("ReadTermOfPayment") || roles.Contains("ReadBank") || roles.Contains("ReadUnitLocation") || roles.Contains("ReadWarehouseLocation") || roles.Contains("ReadLeadTime") || roles.Contains("ReadInitialStock"))
                                {                                
                                    <li class="@(ViewBag.Active == "MasterData" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "MasterData" })">
                                            <i class="nav-icon fas fa-table" style="color:#FFFFFF"></i> <p>Master Data</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadPurchaseRequest"))
                                {
                                    <li class="nav-header">Purchasing</li>
                                    <li class="@(ViewBag.Active == "PurchaseRequest" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "PurchaseRequest", new { area = "Order" })">
                                            <i class="nav-icon fas fa-cart-plus" style="color:#FFFFFF"></i> <p>Purchase Request</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadApprovalPurchaseRequest"))
                                {
                                    <li class="@(ViewBag.Active == "ApprovalPurchaseRequest" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalPurchaseRequest", new { area = "Order" })">
                                            <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Purchase Req</p>
                                        </div>
                                    </li>
                                }
                                if (roles.Contains("ReadPurchaseOrder"))
                                {
                                    <li class="@(ViewBag.Active == "PurchaseOrder" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "PurchaseOrder", new { area = "Order" })">
                                            <i class="nav-icon fas fa-shopping-bag" style="color:#FFFFFF"></i> <p>Purchase Order</p>
                                        </div>
                                    </li>
                                }
                                if (roles.Contains("ReadUnitRequest"))
                                {
                                    <li class="nav-header">Pharmacy</li>
                                    <li class="@(ViewBag.Active == "UnitRequest" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "UnitRequest", new { area = "Transaction" })">
                                            <i class="nav-icon fas fa-first-aid" style="color:#FFFFFF"></i> <p>Unit Request</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadApprovalUnitRequest"))
                                {
                                    <li class="@(ViewBag.Active == "ApprovalUnitRequest" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalUnitRequest", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Unit Request</p>
                                        </div>
                                    </li>
                                }
                                if (roles.Contains("ReadReceiveOrder"))
                                {
                                    <li class="nav-header">Warehouse Management</li>
                                    <li class="@(ViewBag.Active == "ReceiveOrder" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ReceiveOrder", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-box-open" style="color:#FFFFFF"></i> <p>Receive Order</p>
                                        </div>
                                    </li>
                                }
                                if (roles.Contains("ReadQtyDifference"))
                                {
                                    <li class="@(ViewBag.Active == "QtyDifference" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "QtyDifference", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-truck-loading" style="color:#FFFFFF"></i> <p>Qty Difference</p>
                                        </div>
                                    </li>
                                }
                                if (roles.Contains("ReadApprovalQtyDifference"))
                                {
                                    <li class="@(ViewBag.Active == "ApprovalQtyDifference" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalQtyDifference", new { area = "Order" })">
                                            <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Qty Difference</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadUnitOrder"))
                                {
                                    <li class="@(ViewBag.Active == "UnitOrder" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "UnitOrder", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-calculator" style="color:#FFFFFF"></i> <p>Unit Order</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadWarehouseTransfer"))
                                {
                                    <li class="@(ViewBag.Active == "WarehouseTransfer" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "WarehouseTransfer", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-people-carry" style="color:#FFFFFF"></i> <p>Warehouse Transfer</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadProductReturn"))
                                {
                                    <li class="@(ViewBag.Active == "ProductReturn" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ProductReturn", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-dolly" style="color:#FFFFFF"></i> <p>Product Return</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadApprovalProductReturn"))
                                {
                                    <li class="@(ViewBag.Active == "ApprovalProductReturn" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "ApprovalProductReturn", new { area = "Warehouse" })">
                                            <i class="nav-icon fas fa-calendar-check" style="color:#FFFFFF"></i> <p>Approval Product Return</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadStockMonitoring"))
                                {
                                    <li class="nav-header">General</li>
                                    <li class="@(ViewBag.Active == "StockMonitoring" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "StockMonitoring", new { area = "General" })">
                                            <i class="nav-icon fas fa-clipboard-list" style="color:#FFFFFF"></i> <p>Stock Monitoring</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadKeyPerformanceIndicator"))
                                {
                                    <li class="@(ViewBag.Active == "KeyPerformanceIndikator" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "KeyPerformanceIndicator", new { area = "Order" })">
                                            <i class="nav-icon fa-solid fa-key" style="color:#FFFFFF"></i> <p>Key Performance Indicator</p>
                                        </div>
                                    </li>
                                }

                                if (roles.Contains("ReadCalculatedPurchaseOrder") || roles.Contains("ReadClosedPurchaseOrder"))
                                {
                                    <li class="nav-header">Reporting</li>
                                    <li class="@(ViewBag.Active == "Report" ? "nav-item menu-open active":"")">
                                        <div class="nav-link cursor-pointer" style="color:#ffffff" is-active-route data-href="@Url.Action("Index", "Dashboard", new { area = "Report" })">
                                            <i class="nav-icon fas fa-file-alt" style="color:#FFFFFF"></i> <p>Report</p>
                                        </div>
                                    </li>
                                }
                            }
                        }                        
                    </ul>
                </nav>
                <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            @RenderBody()
        </div>
        @if (IsSectionDefined("Scripts"))
        {
            @RenderSection("Scripts", required: true)            
        }

        @*<!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>*@
        <!-- /.control-sidebar -->
        <!-- Main Footer -->
        <footer class="main-footer position-relative">
            <strong>Copyright &copy; 2025 <a href="~/admin/dashboard/">BLM Pharmacy E-Purchasing System</a>.</strong>
            All rights reserved.
            <div class="float-right d-none d-sm-inline-block">
                <b>Version</b> 5.1.1
            </div>
        </footer>
    </div>    

    <!-- REQUIRED SCRIPTS -->
    <!-- jQuery -->
    @*<script src="~/admin/plugins/jquery/jquery.min.js"></script>*@
    <!-- Select2 -->
    <script src="~/admin/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/admin/plugins/select2/js/select2.full.js"></script>
    <script src="~/admin/plugins/select2/js/select2.min.js"></script>
    <script src="~/admin/plugins/select2/js/select2.js"></script>

    <!-- jQuery -->
    @*<script src="~/lib/jquery/jquery.js"></script>
    <script src="~/lib/jquery-validate/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>*@
    <!-- jQuery UI 1.11.4 -->
    <script src="~/admin/plugins/jquery-ui/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>
        $.widget.bridge('uibutton', $.ui.button)
    </script>
    <!-- InputMask -->
    <script src="~/admin/plugins/inputmask/jquery.inputmask.min.js"></script>   
    <!-- Bootstrap 4 -->
    <script src="~/admin/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="~/admin/plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="~/admin/plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="~/admin/plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="~/admin/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/admin/plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/admin/plugins/moment/moment.min.js"></script>
    <script src="~/admin/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/admin/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="~/admin/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="~/admin/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/admin/dist/js/adminlte.js"></script>
    <script src="~/admin/dist/js/signalr.min.js"></script>
    @*<script src="~/admin/dist/js/notificationsignalr.js"></script>*@

    @*UI Normal*@
    <script src="https://cdn.datatables.net/2.0.1/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.1/js/dataTables.bootstrap4.min.js"></script>

    <script>
        // Misalkan ini di-assign dari server (misalnya di Razor View):
        var totalSessionMinutes = 30;
        var notifyBeforeMinutes = 10; // berarti saat 20 menit sudah berlalu, sisa 10 menit, kita beri notifikasi

        // Konversi menit ke milidetik
        var totalSessionMs = totalSessionMinutes * 60 * 1000;
        var notifyTimeMs = (totalSessionMinutes - notifyBeforeMinutes) * 60 * 1000;

        // Hitung mundur waktu tersisa
        var countdownTimeMs = totalSessionMs;

        // Update countdown setiap detik
        var countdownInterval = setInterval(function () {
            // Hitung menit dan detik tersisa
            var minutes = Math.floor(countdownTimeMs / (60 * 1000));
            var seconds = Math.floor((countdownTimeMs % (60 * 1000)) / 1000);

            // Tampilkan countdown di elemen
            $("#countdown-timer").text("Session ends in: " + minutes + "m " + seconds + "s");

            // Kurangi countdownTimeMs
            countdownTimeMs -= 1000;

            // Hentikan countdown jika waktu habis
            if (countdownTimeMs <= 0) {
                clearInterval(countdownInterval);
                $("#countdown-timer").text("Session expired!");

                // Tampilkan notifikasi swal
                swal({
                    title: "Session Expired",
                    text: "Your session has ended.",                    
                    type: "info",
                    confirmButtonText: "Okay"
                });
            }
        }, 1000);

        setTimeout(function () {
            swal({
                title: "Session Expired Warning",
                //text: "Your session will expire in " + notifyBeforeMinutes + " minutes.",
                html: '<div id="countdown-timer" style="font-size: 20px; font-weight: bold;"></div><br>please take action or refresh the page...',
                type: "warning",
                confirmButtonText: "OK"
            });
        }, notifyTimeMs);
    </script>

    <style>
        .cursor-pointer {
            cursor: pointer; /* Tambahkan ini untuk mengubah kursor */
        }
    </style>

    <script>
        //Start Pengaturan Click Pada Button DIV Index
        document.addEventListener("DOMContentLoaded", () => {
            const rows = document.querySelectorAll("div[data-href]");

            rows.forEach(row => {
                row.addEventListener("click", () => {
                    window.location.href = row.dataset.href;
                });
            });
        });
        //End Pengaturan Click Pada Button DIV Index
    </script>    

    <script>
        // Inisialisasi koneksi SignalR
        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

        // Event saat koneksi mulai
        connection.start().then(function () {
            console.log("SignalR connected.");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        // Fungsi untuk mengambil data
        function refreshData() {
            $.ajax({
                url: '@Url.Action("CountNotifikasi", "Home")', // Sesuaikan URL dengan controller Anda
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        // Menampilkan total Approval Notif
                        $("#notifikasiCount").text(response.totalJsonAllNotification);
                        // Menyembunyikan atau menampilkan notifikasiCount
                        if (response.totalJsonAllNotification === 0) {
                            $("#notifikasiCount").hide(); // Sembunyikan jika 0
                        } else {
                            $("#notifikasiCount").show(); // Tampilkan jika tidak 0
                        }

                        // Mengambil data logger dari response
                        var loggerDataPR = response.loggerDataJsonPR;
                        var loggerDataQtyDiff = response.loggerDataJsonQtyDiff;
                        var loggerDataUnitReq = response.loggerDataJsonUnitReq;
                        var loggerDataProductReturn = response.loggerDataJsonProductReturn;

                        // Bersihkan konten sebelumnya, kecuali footer
                        $("#loggerContainer").empty();

                        const combineData = loggerDataPR.concat(loggerDataQtyDiff, loggerDataUnitReq, loggerDataProductReturn);

                        //combineData.forEach(item => {
                        //    if (item.createdDate) {
                        //        const formattedDate = item.createdDate.replace('.', ':');
                        //        item.dateObj = new Date(formattedDate); // Tambahkan properti dateObj untuk pengurutan
                        //    } else {
                        //        console.warn('createdDate tidak valid:', item);
                        //    }
                        //});

                        combineData.forEach(item => {
                            // Misal item.createdDate: "24/12/2024 15.14"
                            const original = item.createdDate.trim();
                            const [datePart, timePart] = original.split(' ');
                            // datePart -> "24/12/2024"
                            // timePart -> "15.14"

                            // Ubah titik di jam-menit menjadi titik dua
                            const fixedTimePart = timePart.replace('.', ':');
                            // fixedTimePart -> "15:14"

                            // Gabungkan kembali
                            const newDateString = `${datePart} ${fixedTimePart}`;
                            // newDateString -> "24/12/2024 15:14"

                            // --------------------------------------------------
                            // PARSING MENJADI Date OBJECT (Opsional, jika perlu):
                            // --------------------------------------------------
                            // Karena format datePart adalah "DD/MM/YYYY", kita pisahkan:
                            const [day, month, year] = datePart.split('/');
                            const [hour, minute] = fixedTimePart.split(':');

                            // Bentuk string ISO 8601: "YYYY-MM-DDTHH:mm:ss"
                            const isoString = `${year}-${month}-${day}T${hour}:${minute}:00`;
                            // Contoh hasil -> "2024-12-24T15:14:00"

                            // Buat object Date dari string ISO
                            const dateObj = new Date(isoString);

                            if (isNaN(dateObj.getTime())) {
                                console.warn('Invalid date:', item.createdDate);
                            } else {
                                // Simpan ke property apa pun yang diinginkan
                                item.dateObj = dateObj;
                            }
                        });




                        // combineData.sort();
                        combineData.sort((a, b) => b.dateObj - a.dateObj);

                        combineData.forEach(item => {
                            const day = String(item.dateObj.getDate()).padStart(2, '0');
                            const month = String(item.dateObj.getMonth() + 1).padStart(2, '0'); // Month is 0-indexed
                            const year = item.dateObj.getFullYear();
                            const hours = String(item.dateObj.getHours()).padStart(2, '0');
                            const minutes = String(item.dateObj.getMinutes()).padStart(2, '0');
                            item.dateObj = `${day}/${month}/${year} ${hours}:${minutes}`; // Simpan dalam format dd-mm-yyyy
                        });

                        combineData.forEach(item => {
                            if (item.purchaseRequestNumber != undefined) {
                                var urlPR = '@Url.Action("DetailApprovalPurchaseRequest", "ApprovalPurchaseRequest", new { area = "Order", id = "__id__" })'.replace("__id__", item.approvalId);
                                var content =
                                    `<a href="${urlPR}" class="dropdown-item cursor-pointer">
                                        <div class="media">
                                            <div class="media-body">
                                                <div class="info-box-content">
                                                    <p class="text-sm text-muted">Approval Purchase Request</p>
                                                    <h3 class="dropdown-item-title" style="color:#347FC4"><b>${item.purchaseRequestNumber} Has Been Created</b></h3>
                                                    <p class="text-sm text-muted">By ${item.createdBy} || ${item.dateObj}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </a>
                                    <div class="dropdown-divider"></div>`;

                                // Append ke loggerContainer
                                $("#loggerContainer").append(content);
                            }
                            else if (item.qtyDifferenceNumber != undefined) {
                                var urlQtyDiff = '@Url.Action("DetailApprovalQtyDifference", "ApprovalQtyDifference", new { area = "Order", id = "__id__" })'.replace("__id__", item.approvalId);
                                var content =
                                    `<a href="${urlQtyDiff}" class="dropdown-item cursor-pointer">
                                        <div class="media">
                                            <div class="media-body">
                                                <div class="info-box-content">
                                                    <p class="text-sm text-muted">Approval Qty Difference</p>
                                                    <h3 class="dropdown-item-title" style="color:#758E4F"><b>${item.qtyDifferenceNumber} Has Been Created</b></h3>
                                                    <p class="text-sm text-muted">By ${item.createdBy} || ${item.dateObj}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </a>
                                    <div class="dropdown-divider"></div>`;

                                // Append ke loggerContainer
                                $("#loggerContainer").append(content);
                            }
                            else if (item.unitRequestNumber != undefined) {
                                var urlUnitReq = '@Url.Action("DetailApprovalUnitRequest", "ApprovalUnitRequest", new { area = "Warehouse", id = "__id__" })'.replace("__id__", item.approvalId);
                                var content =
                                    `<a href="${urlUnitReq}" class="dropdown-item cursor-pointer">
                                        <div class="media">
                                            <div class="media-body">
                                                <div class="info-box-content">
                                                    <p class="text-sm text-muted">Approval Unit Request</p>
                                                    <h3 class="dropdown-item-title" style="color:#F26419"><b>${item.unitRequestNumber} Has Been Created</b></h3>
                                                    <p class="text-sm text-muted">By ${item.createdBy} || ${item.dateObj}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </a>
                                    <div class="dropdown-divider"></div>`;

                                // Append ke loggerContainer
                                $("#loggerContainer").append(content);
                            }
                            else if (item.productReturnNumber != undefined) {
                                var urlPRN = '@Url.Action("DetailApprovalProductReturn", "ApprovalProductReturn", new { area = "Warehouse", id = "__id__" })'.replace("__id__", item.approvalId);
                                var content =
                                    `<a href="${urlPRN}" class="dropdown-item cursor-pointer">
                                                <div class="media">
                                                    <div class="media-body">
                                                        <div class="info-box-content">
                                                            <p class="text-sm text-muted">Approval Product Return</p>
                                                            <h3 class="dropdown-item-title" style="color:#A7D477"><b>${item.productReturnNumber} Has Been Created</b></h3>
                                                            <p class="text-sm text-muted">By ${item.createdBy} || ${item.dateObj}</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </a>
                                            <div class="dropdown-divider"></div>`;

                                // Append ke loggerContainer
                                $("#loggerContainer").append(content);
                            }
                        });

                        // Menambahkan tautan "See All Messages" setelah loop
                        if (loggerDataPR.length > 0 && loggerDataQtyDiff.length == 0 && loggerDataUnitReq.length == 0 && loggerDataProductReturn.length == 0) {
                            var footerLink =
                                `<a href="${'@Url.Action("Index", "Approval", new { area = "Order" })'}" class="dropdown-item dropdown-footer"><strong>See All Messages</strong></a>`;
                        } else if (loggerDataQtyDiff.length > 0 && loggerDataPR.length == 0 && loggerDataUnitReq.length == 0 && loggerDataProductReturn.length == 0) {
                            var footerLink =
                                `<a href="${'@Url.Action("Index", "ApprovalQtyDifference", new { area = "Order" })'}" class="dropdown-item dropdown-footer"><strong>See All Messages</strong></a>`;
                        } else if (loggerDataUnitReq.length > 0 && loggerDataPR.length == 0 && loggerDataQtyDiff.length == 0 && loggerDataProductReturn.length == 0) {
                            var footerLink =
                                `<a href="${'@Url.Action("Index", "ApprovalUnitRequest", new { area = "Warehouse" })'}" class="dropdown-item dropdown-footer"><strong>See All Message</strong></a>`;
                        } else if (loggerDataProductReturn.length > 0 && loggerDataPR.length == 0 && loggerDataQtyDiff.length == 0 && loggerDataUnitReq.length == 0) {
                            var footerLink =
                                `<a href="${'@Url.Action("Index", "ApprovalProductReturn", new { area = "Warehouse" })'}" class="dropdown-item dropdown-footer"><strong>See All Message</strong></a>`;
                        } else if (loggerDataPR.length > 0 || loggerDataQtyDiff.length > 0 || loggerDataUnitReq.length > 0 || loggerDataProductReturn.length > 0) {
                            var footerLink =
                                `<a href="#" class="dropdown-item dropdown-footer"><strong>Select data to your needs</strong></a>`;
                        } else {
                            var footerLink =
                                `<a href="#" class="dropdown-item dropdown-footer"><strong>No Messages</strong></a>`;
                        }
                        $("#loggerContainer").append(footerLink);
                    } else {
                        console.log(response.message); // Jika ada pesan error
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error); // Menangani error
                }
            });
        }

        // Ketika menerima update dari SignalR
        connection.on("UpdateDataCount", function () {
            // Panggil fungsi refreshData untuk mendapatkan data terbaru
            refreshData();
        });

        $(document).ready(function () {
            // Panggil refreshData saat halaman dimuat pertama kali
            refreshData();
        });
    </script>
</body>
</html>