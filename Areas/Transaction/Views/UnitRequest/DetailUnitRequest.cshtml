@{
    ViewData["Title"] = "Detail Unit Request";
    //Layout = "~/Views/Shared/_TopNavbarOrder.cshtml";
}

@using Microsoft.AspNetCore.Identity;

@{
    var listRole = Context.Session.GetString("ListRole");
    @inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager

}
@model PurchasingSystem.Areas.Transaction.Models.UnitRequest

<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="~/admin/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12 bg-white">
            <div class="card-header bg-cyan">
                <h3 class="card-title fw-bold" style="color:#ffffff">@ViewBag.Title</h3>
            </div>

            <form enctype="multipart/form-data" asp-controller="UnitRequest" asp-action="DetailUnitRequest" method="post" class="form-horizontal">
                <div class="card-body">
                    <input asp-for="UnitRequestId" type="hidden" />
                    <input asp-for="Status" id="Status" value="Request" type="hidden">
                    <input asp-for="UserAccessId" id="UserAccessId" type="hidden">

                    @if (signInManager.IsSignedIn(User))
                    {
                        <input asp-for="@User.Identity.Name" class="form-control" type="hidden">
                    }                    

                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label" asp-for="UnitRequestNumber">Request Number</label>
                        <div class="col-sm-10">
                            <input type="text" asp-for="UnitRequestNumber" class="form-control form-control-border border-width-2" id="UnitRequestNumber" placeholder="Request Number" readonly>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label" asp-for="UserApprove1Id">
                            Approve 1
                        </label>
                        <div class="col-sm-10">
                            <select asp-for="UserApprove1Id" asp-items="@ViewBag.Approval" class="form-control select2bs4" id="UserApprove1List" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose User--</option>
                            </select>
                            <div class="col-sm-12">
                                <label asp-for="MessageApprove1" class="col-form-label text-success">Note : @Html.DisplayFor(x => x.MessageApprove1)</label>
                            </div>
                            <span asp-validation-for="UserApprove1Id" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label" asp-for="UnitLocationId">
                            Unit Location
                        </label>
                        <div class="col-sm-10">
                            <select asp-for="UnitLocationId" asp-items="@ViewBag.UnitLocation" class="form-control select2bs4" id="UnitLocation" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose Unit--</option>
                            </select>
                            <span asp-validation-for="UnitLocationId" class="error"></span>
                        </div>
                    </div>                    
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label" asp-for="WarehouseLocationId">
                            Warehouse Location
                        </label>
                        <div class="col-sm-10">
                            <select asp-for="WarehouseLocationId" asp-items="@ViewBag.WarehouseLocation" class="form-control select2bs4" id="WarehouseLocation" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose Location--</option>
                            </select>
                            <span asp-validation-for="WarehouseLocationId" class="error"></span>
                        </div>
                    </div>                   
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label" asp-for="Note">Note</label>
                        <div class="col-sm-10">
                            <input type="text" asp-for="Note" class="form-control form-control-border border-width-2" id="Note" placeholder="Note" disabled>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title fw-bold" style="color:#ffffff">Item</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        @if (Model.ApproveStatusUser1 == null)
                        {
                            <div class="form-group row" id="inputProduct">
                                <div class="col-md-5">
                                    <span>Search Product</span>
                                    <div class="form-group">
                                        <select id="productDropdown" class="form-control select2bs4" style="width: 100%;" data-placeholder="--Choose Product--">
                                            <option value="" hidden disabled selected>--Choose Product--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <span>Qty</span>
                                    <input autocomplete="off" class="form-control" type="number" pattern="/^-?\d+\.?\d*$/" onKeyUp="qtyInput(this.value)" onKeyPress="if(this.value.length==4) return false;" min="1" max="1000" id="qty" placeholder="Qty">
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-md-2">
                                    <span>&nbsp;</span>
                                    <div class="form-group">
                                        @if (signInManager.IsSignedIn(User))
                                        {
                                            <a class="btn bg-indigo" id="btnAdd">
                                                <div style="color:#ffffff">Add to Table</div>
                                            </a>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <input autocomplete="off" class="form-control" id="minstock" type="hidden" placeholder="Min Stock" readonly>
                                </div>
                                <div class="col-md-1">
                                    <input autocomplete="off" class="form-control" id="maxstock" type="hidden" placeholder="Max Stock" readonly>
                                </div>
                                <div class="col-md-2">
                                    <input autocomplete="off" class="form-control" id="bufferstock" type="hidden" placeholder="Buffer Stock" readonly>
                                </div>
                            </div>

                            <div class="form-group row" id="descriptionProduct">
                                <div class="col-md-3" id="GroupProductNumber">
                                    <span>Product Number</span>
                                    <input autocomplete="off" class="form-control" id="productnumber" placeholder="Product Number" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-md-4" id="GroupProductName">
                                    <span>Product Name</span>
                                    <input autocomplete="off" class="form-control" id="productname" placeholder="Product Name" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-md-2" id="GroupStock">
                                    <span>Stock</span>
                                    <input autocomplete="off" class="form-control" id="stock" placeholder="Stock" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-md-2" id="GroupSupplier">
                                    <span>Supplier</span>
                                    <input autocomplete="off" class="form-control" id="Supplier" placeholder="Supplier" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-md-1" id="GroupMeasure">
                                    <span>Measure</span>
                                    <input autocomplete="off" class="form-control" id="measure" placeholder="Measure" readonly>
                                    <span class="error">Required !</span>
                                </div>
                            </div>

                            <div class="card-body table-responsive p-0">
                                <table id="tbldetailpr" class="table table-head-fixed text-nowrap table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">No</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Number</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Name</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Supplier</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Measure</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff">Qty</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff"></div></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.UnitRequestDetails.Count; i++)
                                        {
                                            var no = (Model.UnitRequestDetails.Count - Model.UnitRequestDetails.Count) + i + 1;

                                            <tr id="R$@no" class="detailProduct">
                                                <td class="row-index text-center"><p>@no</p></td>
                                                <td class="text-left row-productNumber"><input class="detProductNumber" asp-for="@Model.UnitRequestDetails[i].ProductNumber" type="hidden" value="@Model.UnitRequestDetails[i].ProductNumber">@Model.UnitRequestDetails[i].ProductNumber</td>
                                                <td class="text-left row-productName"><input class="detProductName" asp-for="@Model.UnitRequestDetails[i].ProductName" type="hidden" value="@Model.UnitRequestDetails[i].ProductName">@Model.UnitRequestDetails[i].ProductName</td>
                                                <td class="text-left"><input class="detSupplier" asp-for="@Model.UnitRequestDetails[i].Supplier" type="hidden" value="@Model.UnitRequestDetails[i].Supplier">@Model.UnitRequestDetails[i].Supplier</td>
                                                <td class="text-left"><input class="detMeasurement" asp-for="@Model.UnitRequestDetails[i].Measurement" type="hidden" value="@Model.UnitRequestDetails[i].Measurement">@Model.UnitRequestDetails[i].Measurement</td>
                                                <td class="text-center row-qty"><input class="detQty" asp-for="@Model.UnitRequestDetails[i].Qty" type="hidden" value="@Model.UnitRequestDetails[i].Qty">@Model.UnitRequestDetails[i].Qty</td>
                                                <td class="text-center"><button class="btn btn-danger btn-sm">X</button></td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="5" class="text-right"><b>Total Qty</b></td>
                                            <td id="producttotalqty" class="text-center productTotalQty">@Model.QtyTotal</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="card-body table-responsive p-0">
                                <table id="tbldetailpr" class="table table-head-fixed text-nowrap table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">No</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Number</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Name</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Supplier</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Measure</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff">Qty</div></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.UnitRequestDetails.Count; i++)
                                        {
                                            var no = (Model.UnitRequestDetails.Count - Model.UnitRequestDetails.Count) + i + 1;

                                            <tr id="R$@no" class="detailProduct">
                                                <td class="row-index text-center"><p>@no</p></td>
                                                <td class="text-left row-productNumber"><input class="detProductNumber" asp-for="@Model.UnitRequestDetails[i].ProductNumber" type="hidden" value="@Model.UnitRequestDetails[i].ProductNumber">@Model.UnitRequestDetails[i].ProductNumber</td>
                                                <td class="text-left row-productName"><input class="detProductName" asp-for="@Model.UnitRequestDetails[i].ProductName" type="hidden" value="@Model.UnitRequestDetails[i].ProductName">@Model.UnitRequestDetails[i].ProductName</td>
                                                <td class="text-left"><input class="detSupplier" asp-for="@Model.UnitRequestDetails[i].Supplier" type="hidden" value="@Model.UnitRequestDetails[i].Supplier">@Model.UnitRequestDetails[i].Supplier</td>
                                                <td class="text-left"><input class="detMeasurement" asp-for="@Model.UnitRequestDetails[i].Measurement" type="hidden" value="@Model.UnitRequestDetails[i].Measurement">@Model.UnitRequestDetails[i].Measurement</td>
                                                <td class="text-center row-qty"><input class="detQty" asp-for="@Model.UnitRequestDetails[i].Qty" type="hidden" value="@Model.UnitRequestDetails[i].Qty">@Model.UnitRequestDetails[i].Qty</td>                                             
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="5" class="text-right"><b>Total Qty</b></td>
                                            <td id="producttotalqty" class="text-center productTotalQty">@Model.QtyTotal</td>                                            
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        }
                    </div>
                </div>

                <!-- start button footer -->
                <div class="card card-orange">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <!-- Bagian Kiri -->
                            <div>
                                @if (User.Identity.Name == "superadmin@admin.com")
                                {
                                    <input type="button" value="Save" id="submit" class="btn btn-primary bg-indigo fw-bold">
                                    <a class="btn bg-indigo" id="btnubah">Change</a>
                                    <a class="btn btn-default" id="btnbatalubah">Cancel Change</a>
                                    <div class="btn btn-default" id="btnbatal" data-href="@Url.Action("Index", "UnitRequest", new { area = "Transaction" })">Cancel</div>
                                }
                                else
                                {
                                    @if (Model.ApproveStatusUser1 == null)
                                    {
                                        @if (!string.IsNullOrEmpty(listRole))
                                        {
                                            var roles = listRole.Split(',');
                                            if (roles.Contains("UpdateUnitRequest"))
                                            {
                                                <input type="button" value="Save" id="submit" class="btn btn-primary bg-indigo float-left fw-bold">
                                                <a class="btn bg-indigo" id="btnubah">Change</a>
                                                <a class="btn btn-default" id="btnbatalubah">Cancel Change</a>
                                            }
                                        }
                                    }
                                    <div class="btn btn-default" id="btnbatal" data-href="@Url.Action("Index", "UnitRequest", new { area = "Transaction" })">Cancel</div>
                                }
                            </div>

                            <!-- Bagian Kanan -->
                            <div>
                                @if (User.Identity.Name == "superadmin@admin.com")
                                {
                                    <a class="btn bg-gray" asp-action="PreviewUnitRequest" asp-controller="UnitRequest" asp-area="Transaction" asp-route-id="@Model.UnitRequestId" target="_blank">
                                        <i class="fas fa-file-pdf" style="color:white"></i> Preview
                                    </a>
                                    <a class="btn bg-indigo" asp-action="DownloadUnitRequest" asp-controller="UnitRequest" asp-area="Transaction" asp-route-id="@Model.UnitRequestId">
                                        <i class="fas fa-download" style="color:white"></i> Download
                                    </a>
                                }
                                else
                                {
                                    @if (Model.ApproveStatusUser1 == null || !string.IsNullOrEmpty(listRole))
                                    {
                                        var roles = listRole?.Split(',') ?? Array.Empty<string>();
                                        if (roles.Contains("PreviewUnitRequest"))
                                        {
                                            <a class="btn bg-gray" asp-action="PreviewUnitRequest" asp-controller="UnitRequest" asp-area="Transaction" asp-route-id="@Model.UnitRequestId" target="_blank">
                                                <i class="fas fa-file-pdf" style="color:white"></i> Preview
                                            </a>
                                        }

                                        if (roles.Contains("DownloadUnitRequest"))
                                        {
                                            <a class="btn bg-indigo" asp-action="DownloadUnitRequest" asp-controller="UnitRequest" asp-area="Transaction" asp-route-id="@Model.UnitRequestId">
                                                <i class="fas fa-download" style="color:white"></i> Download
                                            </a>
                                        }
                                    }
                                }
                            </div>
                        </div>                                                                
                    </div>
                </div>
                <!-- /.end button footer -->
            </form>
        </div>
        @if (TempData["WarningMessage"] != null)
        {
            <script type="text/javascript">
                window.onload = function () {
                    swal("Gagal Simpan", '@TempData["WarningMessage"]', "warning");
                };
            </script>
        }
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
@section Scripts {
    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })
        })
    </script>

    <script>
        $(function () {
            // Inisialisasi Select2
            $('#productDropdown').select2({
                theme: 'bootstrap4',
                placeholder: "--Choose Product--",
                allowClear: true,

                // Aktifkan AJAX di Select2
                ajax: {
                    url: '@Url.Action("GetProductsPaged", "UnitRequest")', // ganti ke Controller/Action sesuai
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        // params.term => teks yang diketik user
                        // params.page => halaman ke berapa (dimulai dari 1)
                        var query = {
                            term: params.term || "",
                            page: params.page || 1,
                            pageSize: 10
                        };
                        return query;
                    },
                    processResults: function (data, params) {
                        // data => response JSON dari server
                        // params.page => halaman ke berapa
                        params.page = params.page || 1;

                        return {
                            results: data.results,
                            pagination: {
                                more: data.pagination.more
                            }
                        };
                    }
                }
            });
        });
    </script>

    <script>
        $(function () {
            $("#submit").hide();
            $("#btnbatalubah").hide();                      
            $("#inputProduct").hide();
            $("#descriptionProduct").hide();
            $(".btn-sm").hide();

            $("#btnubah").click(function () {
                $("#btnubah").hide();
                $("#btnbatal").hide();
                $("#submit").show();
                $("#btnbatalubah").show();
                $("#inputProduct").show();
                $("#descriptionProduct").show();
                $(".btn-sm").show();
                $("#qty").show();                

                document.getElementById("UnitRequestNumber").disabled = false;
                document.getElementById("UserApprove1List").disabled = true;
                document.getElementById("UnitLocation").disabled = true;
                document.getElementById("WarehouseLocation").disabled = true;
                document.getElementById("Note").disabled = false;
                document.getElementById("ListObat").disabled = false;
                document.getElementById("qty").disabled = false;
            })

            $("#btnbatalubah").click(function () {
                $("#btnubah").show();
                $("#btnbatal").show();
                $("#submit").hide();
                $("#btnbatalubah").hide();
                $("#inputProduct").hide();
                $("#descriptionProduct").hide();
                $(".btn-sm").hide();

                document.getElementById("UnitRequestNumber").disabled = true;
                document.getElementById("UserApprove1List").disabled = true;
                document.getElementById("UnitLocation").disabled = true;
                document.getElementById("WarehouseLocation").disabled = true;
                document.getElementById("Note").disabled = true;
                document.getElementById("ListObat").disabled = true;
                document.getElementById("qty").disabled = true;
            })
        })
    </script>

    <script>
        $(document).ready(function () {
            $("#productDropdown").change(function () {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadProduk")',
                    dataType: 'json',
                    data: { id: $("#productDropdown").val() },
                    success: function (item) {
                        $.each(item, function () {
                            //Hidden
                            $("#minstock").val(item.minStock);
                            $("#maxstock").val(item.maxStock);
                            $("#bufferstock").val(item.bufferStock);

                            $("#productnumber").val(item.productCode);
                            $("#productname").val(item.productName);
                            $("#stock").val(item.stock);
                            $("#Supplier").val(item.supplier.supplierName);
                            $("#measure").val(item.measurement.measurementName);
                        });
                    },
                    error: function (ex) {
                        alert('Please wait until the data..., ' + ex);
                    }
                });
                return false;
            })
        })
    </script>

    <script>
        $(document).ready(function () {
            $("#productDropdown").change(function () {
                $("#qty").val('1').focus();
            });
        });
    </script>

    <script>
        function qtyInput(qtySpecial) {
            var qtySpecial = qtySpecial.replace(/[^0-9]+/g, "");
            document.getElementById("qty").value = "";
            document.getElementById("qty").value = qtySpecial;
        };
    </script>

    <script>
        var emptyRow = "<tr><td colspan='10' class='text-center'> No data available in table </td></tr>";

        $(document).ready(function () {
            var detailItem = []
            var detail = {};

            var detailName = document.getElementsByClassName("row-productNumber");
            var detailNameProduct = document.getElementsByClassName("row-productName");

            $('#qty').keypress(function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    swal({
                        title: "Warning",
                        text: "Please, click the Add to Table",
                        type: "warning"
                    });
                }
            });

            //Add button click function
            $('#btnAdd').click(function () {
                var qtyInputan = parseInt($('#qty').val());
                var qtyTersedia = parseInt($('#stock').val());
                var qtyBufferStock = parseInt($('#bufferstock').val());
                var qtyMinStock = parseInt($('#minstock').val());
                var qtyMaxStock = parseInt($('#maxstock').val());
                var qtyOrder = qtyMaxStock - qtyMinStock;

                if (qtyInputan <= qtyTersedia) {
                    if (detailItem.length >= 0) {
                        var isValidItem = true;
                        if ($('#productnumber').val().trim() == '') {
                            isValidItem = false;
                            $('#productnumber').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#productnumber').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#productname').val().trim() == '') {
                            isValidItem = false;
                            $('#productname').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#productname').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#measure').val().trim() == '') {
                            isValidItem = false;
                            $('#measure').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#measure').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#Supplier').val().trim() == '') {
                            isValidItem = false;
                            $('#Supplier').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#Supplier').siblings('span.error').css('visibility', 'hidden');
                        }

                        if (!($('#qty').val().trim() != '' && !isNaN($('#qty').val().trim()))) {
                            isValidItem = false;
                            $('#qty').siblings('span.error').css('visibility', 'visible');
                            $("#qty").val('').focus();
                        } else {
                            $('#qty').siblings('span.error').css('visibility', 'hidden');
                        }

                        //Add Item to List if Valid
                        if (isValidItem) {

                            var productNumber = $('#productnumber').val().trim();
                            var productName = $('#productname').val().trim();
                            var Supplier = $('#Supplier').val().trim();
                            var measurement = $('#measure').val().trim();
                            var qty = parseInt($('#qty').val().trim());

                            if ($('#tbldetailpr tbody').children().children().length == 1) {
                                $('#tbldetailpr tbody').html('');
                            }
                            var no = $('#tbldetailpr tbody').children().length + 1;
                            //var no = 0;
                            var dynamicName = '<tr><td>' + productName + '</td></tr>'

                            //Detail dynamic html string
                            //var checkDuplicate = detailName.find(dataName);
                            let i;
                            for (i = 0; i <= detailName.length; i++) {
                                if (detailName.length == 0) {
                                    checkDuplicate = undefined;
                                }
                                else if (detailName.length > 0 && detailName[i] != undefined) {
                                    if (detailName[i].innerText != productNumber) {
                                        checkDuplicate = undefined;
                                    }
                                    else if (detailName[i].innerText != productNumber && detailSupplier[i].innerText != supplier) {
                                        swal({
                                            title: "Warning",
                                            text: "Sorry, supplier " + supplier + " different from previous supplier",
                                            type: "warning"
                                        });

                                        $('#productDropdown').select2('val', 'selectedIndex', 0);
                                        $("#productDropdown").data('placeholder');
                                        $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#minstock,#maxstock,#bufferstock").val('');
                                        return;
                                    }
                                    else {
                                        swal({
                                            title: "Warning",
                                            text: "Sorry, " + detailNameProduct[i].innerText + " Already exist",
                                            type: "warning"
                                        });

                                        $('#productDropdown').select2('val', 'selectedIndex', 0);
                                        $("#productDropdown").data('placeholder');
                                        $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#minstock,#maxstock,#bufferstock").val('');
                                        return;
                                    }
                                }
                            }

                            function dataName(proName) {
                                return proName == dynamicName;
                            }

                            if (checkDuplicate == undefined) {
                                //var dynamicTr = `<tr id="R${no}"><td class="row-index text-center"><p>${no}</p></td><td class="text-center">${productNumber}</td><td class="text-left row-productName">${productName}</td><td class="text-left">${Supplier}</td><td class="text-center">${measurement}</td><td class="text-center row-qty">${qty}</td><td class="text-right">${price}</td><td class="text-right">${discount}</td><td class="text-right row-total">${total}</td><td class="text-center"> <button class="btn btn-danger btn-sm">-</button> </td></tr>`;
                                var dynamicTr = `@for (int i = 0; i < 1; i++) {
                                    <tr id="R${no}" class="detailProduct">
                                        <td class="row-index text-center"><p>${no}</p></td>
                                        <td class="text-left row-productNumber"><input class="detProductNumber" asp-for="@Model.UnitRequestDetails[i].ProductNumber" type="hidden" value="${productNumber}">${productNumber}</td>
                                        <td class="text-left row-productName"><input class="detProductName" asp-for="@Model.UnitRequestDetails[i].ProductName" type="hidden" value="${productName}">${productName}</td>
                                        <td class="text-left"><input class="detSupplier" asp-for="@Model.UnitRequestDetails[i].Supplier" type="hidden" value="${Supplier}">${Supplier}</td>
                                        <td class="text-left"><input class="detMeasurement" asp-for="@Model.UnitRequestDetails[i].Measurement" type="hidden" value="${measurement}">${measurement}</td>
                                        <td class="text-center row-qty"><input class="detQty" asp-for="@Model.UnitRequestDetails[i].Qty" type="hidden" value="${qty}">${qty}</td>
                                        <td class="text-center"> <button class="btn btn-danger btn-sm">X</button> </td>
                                    </tr>
                                }`;

                                $('#tbldetailpr tbody').append(dynamicTr);

                                detailItem.push(dynamicTr);

                                sumQty();

                                $('#productDropdown').select2('val', 'selectedIndex', 0);
                                $("#productDropdown").data('placeholder');
                                $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#minstock,#maxstock,#bufferstock").val('');

                                $('.btn-sm').click(function () {
                                    var child = $(this).closest('tr').nextAll();

                                    child.each(function () {
                                        var id = $(this).attr('id');
                                        if (id.length > 2) {
                                            var idx = $(this).children('.row-index').children('p');
                                            var dig = parseInt(id.substring(2));
                                            idx.html(`${dig - 1}`);
                                            $(this).attr('id', `R${dig - 1}`);
                                        } else {
                                            var idx = $(this).children('.row-index').children('p');
                                            var dig = parseInt(id.substring(1));
                                            idx.html(`${dig - 1}`);
                                            $(this).attr('id', `R${dig - 1}`);
                                        }
                                    });

                                    $(this).closest('tr').remove();

                                    swal({
                                        title: "Item successfully deleted",
                                        type: "success"
                                    });

                                    if ($('#tbldetailpr tbody').children().children().length == 0) {
                                        $('#tbldetailpr tbody').append(emptyRow);
                                        sumQty();
                                    } else {
                                        sumQty();
                                    }

                                });
                            } else {
                                $('#errorDisplay').siblings('span.error').css('visibility', 'visible');
                                return;
                            }

                            function sumQty() {
                                var sumQty = parseInt(0);
                                var getTotalQty = document.getElementsByClassName("row-qty");
                                for (var i = 0; i < getTotalQty.length; i++) {
                                    var totalqty = getTotalQty[i].innerText;
                                    //var totalqty = getTotalQty[i].lastElementChild.defaultValue;
                                    sumQty = sumQty + parseInt(totalqty);
                                }
                                $('.productTotalQty').text(sumQty);
                            }                           
                        }
                    }
                } else if ($('#qty').val() == 0) {
                    swal({
                        title: "Warning",
                        text: "Qty cannot be 0 !!!",
                        type: "warning"
                    });
                    $('#productDropdown').select2('val', 'selectedIndex', 0);
                    $("#productDropdown").data('placeholder');
                    $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#minstock,#maxstock,#bufferstock").val('');
                } else {
                    swal({
                        title: "Warning",
                        text: "Sorry, stock must be less than " + qtyTersedia,
                        type: "warning"
                    });
                    $('#productDropdown').select2('val', 'selectedIndex', 0);
                    $("#productDropdown").data('placeholder');
                    $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#minstock,#maxstock,#bufferstock").val('');
                }
            });


            //Delete item
            $('.btn-sm').click(function () {
                var child = $(this).closest('tr').nextAll();

                child.each(function () {
                    var id = $(this).attr('id');
                    if (id.length > 2) {
                        var idx = $(this).children('.row-index').children('p');
                        var dig = parseInt(id.substring(2));
                        idx.html(`${dig - 1}`);
                        $(this).attr('id', `R${dig - 1}`);
                    } else {
                        var idx = $(this).children('.row-index').children('p');
                        var dig = parseInt(id.substring(1));
                        idx.html(`${dig - 1}`);
                        $(this).attr('id', `R${dig - 1}`);
                    }
                });

                $(this).closest('tr').remove();

                swal({
                    title: "Item successfully deleted",
                    type: "success"
                });

                if ($('#tbldetailpr tbody').children().children().length == 0) {
                    $('#tbldetailpr tbody').append(emptyRow);
                } else {
                    sumQty();
                }

                function sumQty() {
                    var sumQty = parseInt(0);
                    var getTotalQty = document.getElementsByClassName("row-qty");
                    for (var i = 0; i < getTotalQty.length; i++) {
                        var totalqty = getTotalQty[i].innerText;
                        //var totalqty = getTotalQty[i].lastElementChild.defaultValue;
                        sumQty = sumQty + parseInt(totalqty);
                    }
                    $('.productTotalQty').text(sumQty);
                }
            });

            //Save button click function
            $('#submit').click(function () {
                var isAllValid = true;
                var detailItemDone = [];
                var detailDone = {};
                var UnitLocationId = $('#UnitLocation').find(":selected").val();
                var WarehouseLocationId = $('#WarehouseLocation').find(":selected").val();
                var UserApprove1Id = $('#UserApprove1List').find(":selected").val();
                var detailTable = $('#tbldetailpr tbody').children().children().length;

                if (detailTable == 1) { // 1 adalah isi dari keterangan pada table dihitung 1
                    swal({
                        title: "Warning",
                        text: "Sorry, items in the table cannot be empty",
                        type: "warning"
                    });
                    isAllValid = false;                
                } else {
                    //Sembunyikan pesan error
                    $('#UnitLocation').siblings('span.error').css('visibility', 'hidden')
                    $('#WarehouseLocation').siblings('span.error').css('visibility', 'hidden')
                    $('#Department1List').siblings('span.error').css('visibility', 'hidden')
                    $('#Position1List').siblings('span.error').css('visibility', 'hidden')
                    $('#UserApprove1List').siblings('span.error').css('visibility', 'hidden')

                    $("#tbldetailpr").find("tbody").children("tr").each(function (index, element) {
                        //***Penggunaan nama detail harus sesuai dengan nama pada table. Misal kodeproduk,namaproduk,dst harus sama.
                        detailDone.productnumber = $(element).find(".detProductNumber").val();
                        detailDone.productname = $(element).find(".detProductName").val();
                        detailDone.Supplier = $(element).find(".detSupplier").val();
                        detailDone.measurement = $(element).find(".detMeasurement").val();
                        detailDone.qty = $(element).find(".detQty").val();
                        detailItemDone.push(detailDone);
                        detailDone = {};
                    });

                    var UnitRequestNumber = $('#UnitRequestNumber').val();
                    var UserAccessId = $('#UserAccessId').val();
                    var UnitLocationId = $('#UnitLocation').val();
                    var WarehouseLocationId = $('#WarehouseLocation').val();
                    var Department1Id = $('#Department1List').val();
                    var Position1Id = $('#Position1List').val();
                    var UserApprove1Id = $('#UserApprove1List').val();
                    var QtyTotal = $('.productTotalQty').text();
                    var Status = $('#Status').val();
                    var Note = $('#Note').val();
                    var UnitRequestDetail = detailItemDone;
                }

                if (isAllValid) {
                    var dataPost = {};
                    dataPost.UnitRequestNumber = UnitRequestNumber;
                    dataPost.UserAccessId = UserAccessId;
                    dataPost.UnitLocationId = UnitLocationId;
                    dataPost.WarehouseLocationId = WarehouseLocationId;
                    dataPost.Department1Id = Department1Id;
                    dataPost.Position1Id = Position1Id;
                    dataPost.UserApprove1Id = UserApprove1Id;
                    dataPost.QtyTotal = QtyTotal;
                    dataPost.Status = Status;
                    dataPost.Note = Note;
                    dataPost.UnitRequestDetails = UnitRequestDetail;

                    $(this).val('In process...');

                    $.post("@Url.Action("DetailUnitRequest", "UnitRequest")", { model: dataPost },
                        function (data) {
                            window.location.href = data.redirectToUrl;
                        }
                    );
                }
            });
        });
    </script>

    <style>
        span.error {
            display: block;
            visibility: hidden;
            color: red;
            font-size: 90%;
        }

        tr.error {
            background-color: rgba(255,0,0,0.35);
        }

        /*css for table*/
        .container td {
            vertical-align: top;
        }

        .tablecontainer table {
            width: 100%;
            border-collapse: collapse;
            border-top: 1px solid #BFAEAE;
            border-right: 1px solid #BFAEAE;
        }

        .tablecontainer th {
            border-bottom: 2px solid #BFAEAE;
        }

        .tablecontainer th, .tablecontainer td {
            text-align: center;
            border-left: 1px solid #BFAEAE;
            padding: 5px;
            border-bottom: 1px solid #BFAEAE;
        }

        .ui-widget {
            font-size: 12px !important;
        }
    </style>
}