@{
    ViewData["Title"] = "New Purchase Order";
    Layout = "~/Views/Shared/_TopNavbarPurchaseOrder.cshtml";
}

@using Microsoft.AspNetCore.Identity;
@using PurchasingSystem.Areas.Order.Models;

@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager
@model PurchasingSystem.Areas.Order.Models.PurchaseOrder

<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="~/admin/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12 bg-white">
            <div class="card-header bg-cyan">
                <h3 class="card-title fw-bold" style="color:#ffffff">@ViewBag.Title</h3>
            </div>

            <form enctype="multipart/form-data" asp-controller="PurchaseOrder" asp-action="DetailPurchaseOrder" method="post" class="form-horizontal">
                <div class="card-body">
                    <input asp-for="PurchaseOrderId" type="hidden" id="poList" onChange="poChange(this.value)" />
                    <input asp-for="Status" id="Status" type="hidden">
                    <input asp-for="UserAccessId" id="UserAccessId" type="hidden">
                    <input asp-for="ExpiredDate" id="ExpiredDate" type="hidden">
                    <input asp-for="PurchaseRequestId" id="PurchaseRequestId" type="hidden">
                    <input asp-for="PurchaseRequestNumber" id="PurchaseRequestNumber" type="hidden">
                    <input asp-for="ApproveStatusUser1" id="ApproveStatusUser1" type="hidden">
                    <input asp-for="ApproveStatusUser2" id="ApproveStatusUser2" type="hidden">
                    <input asp-for="ApproveStatusUser3" id="ApproveStatusUser3" type="hidden">

                    @if (signInManager.IsSignedIn(User))
                    {
                        <input asp-for="@User.Identity.Name" class="form-control" type="hidden">
                    }

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">New Purchase Order Number</label>
                        <div class="col-sm-9">
                            @Html.Hidden("PONumber", (object)ViewBag.PurchaseOrderNumber)
                            <input type="text" value="@ViewBag.PurchaseOrderNumber" id="PurchaseOrderNumber" class="form-control form-control-border border-width-2" readonly />
                        </div>
                    </div>
                    @*<div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="PurchaseRequestNumber">PR Number</label>
                        <div class="col-sm-9">
                            <input type="text" asp-for="PurchaseRequestNumber" class="form-control form-control-border border-width-2" id="PurchaseRequestNumber" placeholder="PR Number" readonly disabled>
                        </div>
                    </div>*@
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="UserAccessId">
                            Create By
                        </label>
                        <div class="col-sm-9">
                            <select asp-for="UserAccessId" asp-items="@ViewBag.User" class="form-control select2bs4" id="UserAccessId" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose User--</option>
                            </select>
                            <span asp-validation-for="UserAccessId" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="UserApprove1Id">
                            User Approve 1
                        </label>
                        <div class="col-sm-9">
                            <select asp-for="UserApprove1Id" asp-items="@ViewBag.Approval" class="form-control select2bs4" id="UserApprove1Id" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose User--</option>
                            </select>
                            <span asp-validation-for="UserApprove1Id" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="UserApprove2Id">
                            User Approve 2
                        </label>
                        <div class="col-sm-9">
                            <select asp-for="UserApprove2Id" asp-items="@ViewBag.Approval" class="form-control select2bs4" id="UserApprove2Id" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose User--</option>
                            </select>
                            <span asp-validation-for="UserApprove2Id" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="UserApprove3Id">
                            User Approve 3
                        </label>
                        <div class="col-sm-9">
                            <select asp-for="UserApprove3Id" asp-items="@ViewBag.Approval" class="form-control select2bs4" id="UserApprove3Id" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose User--</option>
                            </select>
                            <span asp-validation-for="UserApprove3Id" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="TermOfPaymentId">
                            Term Of Payment
                        </label>
                        <div class="col-sm-9">
                            <select asp-for="TermOfPaymentId" asp-items="@ViewBag.TermOfPayment" class="form-control select2bs4" id="TermOfPaymentId" style="width: 100%;" disabled>
                                <option value="" hidden disabled selected>--Choose TOP--</option>
                            </select>
                            <span asp-validation-for="TermOfPaymentId" class="error"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label" asp-for="Note">Note</label>
                        <div class="col-sm-9">
                            <input type="text" asp-for="Note" class="form-control form-control-border border-width-2" id="Note" placeholder="Note" disabled>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title fw-bold" style="color:#ffffff">Item</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="form-group row">
                                <div class="col-sm-5">
                                    <div class="form-group">
                                        <select asp-items="@ViewBag.Product" class="form-control select2bs4" style="width: 100%;" id="produklist" data-placeholder="--Choose Product--">
                                            <option value="" hidden disabled selected>--Choose Product--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <input autocomplete="off" class="form-control" type="number" pattern="/^-?\d+\.?\d*$/" onKeyUp="qtyInput(this.value)" onKeyPress="if(this.value.length==4) return false;" min="1" max="1000" id="qty" placeholder="Qty" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        @if (signInManager.IsSignedIn(User))
                                        {
                                            <a class="btn bg-indigo" id="btnAdd">
                                                <div style="color:#ffffff">Add to Table</div>
                                            </a>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <input autocomplete="off" class="form-control" id="minstock" type="hidden" placeholder="Min Stock" readonly>
                                </div>
                                <div class="col-sm-1">
                                    <input autocomplete="off" class="form-control" id="maxstock" type="hidden" placeholder="Max Stock" readonly>
                                </div>
                                <div class="col-sm-2">
                                    <input autocomplete="off" class="form-control" id="bufferstock" type="hidden" placeholder="Buffer Stock" readonly>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-2">
                                    <span>Product Number</span>
                                    <input autocomplete="off" class="form-control" id="productnumber" placeholder="Product Number" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-3">
                                    <span>Product Name</span>
                                    <input autocomplete="off" class="form-control" id="productname" placeholder="Product Name" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-1">
                                    <span>Qty Order</span>
                                    <input autocomplete="off" class="form-control" id="qtyorder" placeholder="Qty Order" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-2">
                                    <span>Supplier</span>
                                    <input autocomplete="off" class="form-control" id="Supplier" placeholder="Supplier" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-1">
                                    <span>Measure</span>
                                    <input autocomplete="off" class="form-control" id="measure" placeholder="Measure" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-1">
                                    <span>Discount</span>
                                    <input autocomplete="off" class="form-control" id="discount" placeholder="Discount" readonly>
                                    <span class="error">Required !</span>
                                </div>
                                <div class="col-sm-2">
                                    <span>Price</span>
                                    <input autocomplete="off" class="form-control" id="price" placeholder="Price" readonly>
                                    <span class="error">Required !</span>
                                </div>
                            </div>
                        @if (Model.PurchaseOrderDetails.Count != 1)
                        {
                            <div class="card-body table-responsive p-0">
                                <table id="tbldetailpr" class="table table-head-fixed text-nowrap table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">No</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Number</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Name</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Supplier</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Measure</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff">Qty</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Price</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Discount</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Sub Total</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff"></div></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.PurchaseOrderDetails.Count; i++)
                                        {
                                            var no = (Model.PurchaseOrderDetails.Count - Model.PurchaseOrderDetails.Count) + i + 1;

                                            <tr id="R$@no" class="detailProduct">
                                                <td class="row-index text-center"><p>@no</p></td>
                                                <td class="text-left row-productNumber"><input class="detProductNumber" asp-for="@Model.PurchaseOrderDetails[i].ProductNumber" type="hidden" value="@Model.PurchaseOrderDetails[i].ProductNumber">@Model.PurchaseOrderDetails[i].ProductNumber</td>
                                                <td class="text-left row-productName"><input class="detProductName" asp-for="@Model.PurchaseOrderDetails[i].ProductName" type="hidden" value="@Model.PurchaseOrderDetails[i].ProductName">@Model.PurchaseOrderDetails[i].ProductName</td>
                                                <td class="text-left"><input class="detSupplier" asp-for="@Model.PurchaseOrderDetails[i].Supplier" type="hidden" value="@Model.PurchaseOrderDetails[i].Supplier">@Model.PurchaseOrderDetails[i].Supplier</td>
                                                <td class="text-left"><input class="detMeasurement" asp-for="@Model.PurchaseOrderDetails[i].Measurement" type="hidden" value="@Model.PurchaseOrderDetails[i].Measurement">@Model.PurchaseOrderDetails[i].Measurement</td>
                                                <td class="text-center row-qty"><input class="detQty" asp-for="@Model.PurchaseOrderDetails[i].Qty" type="hidden" value="@Model.PurchaseOrderDetails[i].Qty">@Model.PurchaseOrderDetails[i].Qty</td>
                                                <td class="text-right"><input class="detPrice" asp-for="@Model.PurchaseOrderDetails[i].Price" type="hidden" value="@Model.PurchaseOrderDetails[i].Price">@Model.PurchaseOrderDetails[i].Price</td>
                                                <td class="text-right"><input class="detDiscount" asp-for="@Model.PurchaseOrderDetails[i].Discount" type="hidden" value="@Model.PurchaseOrderDetails[i].Discount">@Model.PurchaseOrderDetails[i].Discount</td>
                                                <td class="text-right row-total"><input class="detSubTotal" asp-for="@Model.PurchaseOrderDetails[i].SubTotal" type="hidden" value="@Model.PurchaseOrderDetails[i].SubTotal">@Model.PurchaseOrderDetails[i].SubTotal</td>
                                                <td class="text-center"></td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th colspan="5" class="text-right">Total Qty</th>
                                            <td id="producttotalqty" class="text-center productTotalQty">@Model.QtyTotal</td>
                                            <th colspan="2" class="text-right">Grand Total</th>
                                            <td id="productgrandtotal" class="text-right productGrandTotal">@Math.Truncate(@Model.GrandTotal)</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="card-body table-responsive p-0">
                                <table id="tbldetailpr" class="table table-head-fixed text-nowrap table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">No</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Number</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Product Name</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Supplier</div></th>
                                            <th class="text-left" style="background-color:#7FB9EE"><div style="color:#ffffff">Measure</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff">Qty</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Price</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Discount</div></th>
                                            <th class="text-right" style="background-color:#7FB9EE"><div style="color:#ffffff">Sub Total</div></th>
                                            <th class="text-center" style="background-color:#7FB9EE"><div style="color:#ffffff"></div></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                    <tfoot>
                                        <tr>
                                            <th colspan="5" class="text-right">Total Qty</th>
                                            <td id="producttotalqty" class="text-center productTotalQty">@Model.QtyTotal</td>
                                            <th colspan="2" class="text-right">Grand Total</th>
                                            <td id="productgrandtotal" class="text-right productGrandTotal">@Math.Truncate(@Model.GrandTotal)</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        }
                    </div>
                </div>

                <!-- start button footer -->
                <div class="card card-orange">
                    <div class="card-body">
                        <input type="button" value="Save" id="submit" class="btn btn-primary bg-indigo float-left fw-bold">
                        <a class="btn btn-default" asp-action="Index" asp-controller="PurchaseOrder">Batal</a>
                        @*@if (Model.Status == "Cancelled")
                        {
                            <a class="btn btn-success" asp-action="GenerateNewPo" asp-controller="NewPurchaseOrder" asp-area="Order" asp-route-id="@Model.PurchaseOrderId">Generate New PO</a>
                            <a class="btn btn-default" asp-action="Index" asp-controller="PurchaseOrder">Batal</a>
                        }
                        else
                        {
                            <a class="btn bg-indigo" asp-action="PrintPurchaseOrder" asp-controller="PurchaseOrder" asp-area="Order" asp-route-id="@Model.PurchaseOrderId"><i class="fas fa-print" style="color:white"></i></a>
                            <a class="btn btn-default" asp-action="Index" asp-controller="PurchaseOrder">Batal</a>
                        }*@
                    </div>
                </div>
                <!-- /.end button footer -->
            </form>
        </div>
        @if (TempData["WarningMessage"] != null)
        {
            <script type="text/javascript">
                window.onload = function () {
                    swal("Failed", '@TempData["WarningMessage"]', "warning");
                };
            </script>
        }
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
@section Scripts {

    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })
        })
    </script>

    <script>
        $(function poChange(val) {
            $("#produklist").empty();
            var po =$("#poList").val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("LoadPurchaseOrder")',
                dataType: 'json',
                data: { id: $("#poList").val() },
                success: function (items) {
                    $("#produklist").append('<option value = "' + -1 + '" hidden disabled selected>' + "--Choose Product--" + '</option>');
                    $.each(items.purchaseOrderDetails, function (id, value) {
                        var $option = $("<option/>", {
                            value: value.purchaseOrderDetailId,
                            text: value.productName
                        });
                        $("#produklist").append($option);
                    });
                },
                error: function (ex) {
                    alert('Failed to get data' + ex);
                }
            });
            return false;
        })
    </script>

    <script>
        $(document).ready(function () {
            $("#produklist").change(function () {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadPurchaseOrderDetail")',
                    dataType: 'json',
                    data: { id: $("#produklist").val() },
                    success: function (item) {
                        $.each(item, function () {
                            $("#productnumber").val(item.productNumber);
                            $("#productname").val(item.productName);
                            $("#qtyorder").val(item.qtyOrder);
                            $("#Supplier").val(item.supplier);
                            $("#measure").val(item.measurement);
                            $("#discount").val(item.discount);
                            $("#price").val(item.price);
                            $("#qty").val(item.qtyReceive);
                        });
                    },
                    //error: function (ex) {
                    //    alert('Please wait until the data..., ' + ex);
                    //}
                });
                return false;
            })
        })
    </script>

    <script>
        $(document).ready(function () {
            $("#produklist").change(function () {
                $("#qty").val('1').focus();
            });
        });
    </script>

    <script>
        function qtyInput(qtySpecial) {
            var qtySpecial = qtySpecial.replace(/[^0-9]+/g, "");
            document.getElementById("qty").value = "";
            document.getElementById("qty").value = qtySpecial;
        };
    </script>

    <script>
        var emptyRow = "<tr><td colspan='10' class='text-center'> No data available in table </td></tr>";
        var detailTable = $('#tbldetailpr tbody').children().children().length;

        $(document).ready(function () {
            if (detailTable == 0) { // 1 adalah isi dari keterangan pada table dihitung 1
                $('#tbldetailpr tbody').append(emptyRow);
            }
            
            sumQty();
            sumGranTotal();

            function sumQty() {
                var sumQty = parseInt(0);
                var getTotalQty = document.getElementsByClassName("row-qty");
                for (var i = 0; i < getTotalQty.length; i++) {
                    var totalqty = getTotalQty[i].innerText;
                    //var totalqty = getTotalQty[i].lastElementChild.defaultValue;
                    sumQty = sumQty + parseInt(totalqty);
                }
                $('.productTotalQty').text(sumQty);
            }

            function sumGranTotal() {
                var sumGrandTotal = parseInt(0);
                var getTotal = document.getElementsByClassName("row-total");
                for (var i = 0; i < getTotal.length; i++) {
                    var subtotal = getTotal[i].innerText;
                    sumGrandTotal = sumGrandTotal + parseFloat(subtotal);
                }
                $('.productGrandTotal').text(sumGrandTotal);
            }

            var detailItem = []
            var detail = {};

            var detailName = document.getElementsByClassName("row-productNumber");
            var detailNameProduct = document.getElementsByClassName("row-productName");

            $('#qty').keypress(function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    swal({
                        title: "Warning",
                        text: "Please, click the Add to Table",
                        type: "warning"
                    });
                }
            });

            //Add button click function
            $('#btnAdd').click(function () {
                var qtyInputan = parseInt($('#qty').val());
                var qtyOrder = parseInt($('#qtyorder').val());

                if (qtyInputan <= qtyOrder) {
                    if (detailItem.length >= 0) {
                        var isValidItem = true;
                        if ($('#productnumber').val().trim() == '') {
                            isValidItem = false;
                            $('#productnumber').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#productnumber').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#productname').val().trim() == '') {
                            isValidItem = false;
                            $('#productname').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#productname').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#measure').val().trim() == '') {
                            isValidItem = false;
                            $('#measure').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#measure').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#Supplier').val().trim() == '') {
                            isValidItem = false;
                            $('#Supplier').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#Supplier').siblings('span.error').css('visibility', 'hidden');
                        }

                        if (!($('#qty').val().trim() != '' && !isNaN($('#qty').val().trim()))) {
                            isValidItem = false;
                            $('#qty').siblings('span.error').css('visibility', 'visible');
                            $("#qty").val('').focus();
                        } else {
                            $('#qty').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#price').val().trim() == '') {
                            isValidItem = false;
                            $('#price').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#price').siblings('span.error').css('visibility', 'hidden');
                        }

                        if ($('#discount').val().trim() == '') {
                            isValidItem = false;
                            $('#discount').siblings('span.error').css('visibility', 'visible');
                        } else {
                            $('#discount').siblings('span.error').css('visibility', 'hidden');
                        }

                        //Add Item to List if Valid
                        if (isValidItem) {

                            var productNumber = $('#productnumber').val().trim();
                            var productName = $('#productname').val().trim();
                            var Supplier = $('#Supplier').val().trim();
                            var measurement = $('#measure').val().trim();
                            var qty = parseInt($('#qty').val().trim());
                            var price = parseFloat($('#price').val().trim());
                            var discount = parseInt($('#discount').val().trim());
                            var total = (parseInt($('#qty').val().trim()) * parseFloat($('#price').val().trim())) - (parseInt($('#discount').val().trim()));

                            if ($('#tbldetailpr tbody').children().children().length == 1) {
                                $('#tbldetailpr tbody').html('');
                            }
                            var no = $('#tbldetailpr tbody').children().length + 1;
                            //var no = 0;
                            var dynamicName = '<tr><td>' + productName + '</td></tr>'

                            //create dynamic html string
                            //var checkDuplicate = detailName.find(dataName);
                            let i;
                            for (i = 0; i <= detailName.length; i++) {
                                if (detailName.length == 0) {
                                    checkDuplicate = undefined;
                                }
                                else if (detailName.length > 0 && detailName[i] != undefined) {
                                    if (detailName[i].innerText != productNumber) {
                                        checkDuplicate = undefined;
                                    }
                                    else {
                                        swal({
                                            title: "Warning",
                                            text: "Sorry, " + detailNameProduct[i].innerText + " Already exist",
                                            type: "warning"
                                        });

                                        $('#produklist').select2('val', 'selectedIndex', 0);
                                        $("#produklist").data('placeholder');
                                        $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#qtyorder,#price,#discount,#minstock,#maxstock,#bufferstock").val('');
                                        return;
                                    }
                                }
                            }

                            function dataName(proName) {
                                return proName == dynamicName;
                            }

                            if (checkDuplicate == undefined) {
                                //var dynamicTr = `<tr id="R${no}"><td class="row-index text-center"><p>${no}</p></td><td class="text-center">${productNumber}</td><td class="text-left row-productName">${productName}</td><td class="text-left">${Supplier}</td><td class="text-center">${measurement}</td><td class="text-center row-qty">${qty}</td><td class="text-right">${price}</td><td class="text-right">${discount}</td><td class="text-right row-total">${total}</td><td class="text-center"> <button class="btn btn-danger btn-sm">-</button> </td></tr>`;
                                var dynamicTr =
                                    `@for (int i = 0; i < 1; i++) {
                                                        <tr id="R${no}" class="detailProduct">
                                                        <td class="row-index text-center"><p>${no}</p></td>
                                                                    <td class="text-left row-productNumber"><input class="detProductNumber" asp-for="@Model.PurchaseOrderDetails[i].ProductNumber" type="hidden" value="${productNumber}">${productNumber}</td>
                                                                    <td class="text-left row-productName"><input class="detProductName" asp-for="@Model.PurchaseOrderDetails[i].ProductName" type="hidden" value="${productName}">${productName}</td>
                                                                    <td class="text-left"><input class="detSupplier" asp-for="@Model.PurchaseOrderDetails[i].Supplier" type="hidden" value="${Supplier}">${Supplier}</td>
                                                                    <td class="text-left"><input class="detMeasurement" asp-for="@Model.PurchaseOrderDetails[i].Measurement" type="hidden" value="${measurement}">${measurement}</td>
                                                                    <td class="text-center row-qty"><input class="detQty" asp-for="@Model.PurchaseOrderDetails[i].Qty" type="hidden" value="${qty}">${qty}</td>
                                                                    <td class="text-right"><input class="detPrice" asp-for="@Model.PurchaseOrderDetails[i].Price" type="hidden" value="${price}">${price}</td>
                                                                    <td class="text-right"><input class="detDiscount" asp-for="@Model.PurchaseOrderDetails[i].Discount" type="hidden" value="${discount}">${discount}</td>
                                                                    <td class="text-right row-total"><input class="detSubTotal" asp-for="@Model.PurchaseOrderDetails[i].SubTotal" type="hidden" value="${total}">${total}</td>
                                                                    <td class="text-center"> <button class="btn btn-danger btn-sm">X</button> </td></tr>}`;

                                $('#tbldetailpr tbody').append(dynamicTr);

                                detailItem.push(dynamicTr);
                                //detailName.push(dynamicName);

                                sumQty();
                                sumGranTotal();

                                $('#produklist').select2('val', 'selectedIndex', 0);
                                $("#produklist").data('placeholder');
                                $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#qtyorder,#price,#discount,#minstock,#maxstock,#bufferstock").val('');

                                $('.btn-sm').click(function () {
                                    var child = $(this).closest('tr').nextAll();

                                    child.each(function () {
                                        var id = $(this).attr('id');
                                        if (id.length > 2) {
                                            var idx = $(this).children('.row-index').children('p');
                                            var dig = parseInt(id.substring(2));
                                            idx.html(`${dig - 1}`);
                                            $(this).attr('id', `R${dig - 1}`);
                                        } else {
                                            var idx = $(this).children('.row-index').children('p');
                                            var dig = parseInt(id.substring(1));
                                            idx.html(`${dig - 1}`);
                                            $(this).attr('id', `R${dig - 1}`);
                                        }
                                    });

                                    $(this).closest('tr').remove();

                                    swal({
                                        title: "Item successfully deleted",
                                        type: "success"
                                    });

                                    if ($('#tbldetailpr tbody').children().children().length == 0) {
                                        $('#tbldetailpr tbody').append(emptyRow);
                                        sumQty();
                                        sumGranTotal();
                                    } else {
                                        sumQty();
                                        sumGranTotal();
                                    }

                                });
                            } else {
                                $('#errorDisplay').siblings('span.error').css('visibility', 'visible');
                                return;
                            }

                            function sumQty() {
                                var sumQty = parseInt(0);
                                var getTotalQty = document.getElementsByClassName("row-qty");
                                for (var i = 0; i < getTotalQty.length; i++) {
                                    var totalqty = getTotalQty[i].innerText;
                                    //var totalqty = getTotalQty[i].lastElementChild.defaultValue;
                                    sumQty = sumQty + parseInt(totalqty);
                                }
                                $('.productTotalQty').text(sumQty);
                            }

                            function sumGranTotal() {
                                var sumGrandTotal = parseInt(0);
                                var getTotal = document.getElementsByClassName("row-total");
                                for (var i = 0; i < getTotal.length; i++) {
                                    var subtotal = getTotal[i].innerText;
                                    sumGrandTotal = sumGrandTotal + parseFloat(subtotal);
                                }
                                $('.productGrandTotal').text(sumGrandTotal);
                            }
                        }
                    }
                } 
                else if ($('#qty').val() == 0) {
                    swal({
                        title: "Warning",
                        text: "Qty cannot be 0 !!!",
                        type: "warning"
                    });
                    $('#produklist').select2('val', 'selectedIndex', 0);
                    $("#produklist").data('placeholder');
                    $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#qtyorder,#price,#discount,#minstock,#maxstock,#bufferstock").val('');
                } else {
                    swal({
                        title: "Warning",
                        text: "Please input correctly !",
                        type: "warning"
                    });
                    $('#produklist').select2('val', 'selectedIndex', 0);
                    $("#produklist").data('placeholder');
                    $("#productnumber,#productname,#stock,#Supplier,#measure,#qty,#qtyorder,#price,#discount,#minstock,#maxstock,#bufferstock").val('');
                }
            });


            //Delete item
            $('.btn-sm').click(function () {
                var child = $(this).closest('tr').nextAll();

                child.each(function () {
                    var id = $(this).attr('id');
                    if (id.length > 2) {
                        var idx = $(this).children('.row-index').children('p');
                        var dig = parseInt(id.substring(2));
                        idx.html(`${dig - 1}`);
                        $(this).attr('id', `R${dig - 1}`);
                    } else {
                        var idx = $(this).children('.row-index').children('p');
                        var dig = parseInt(id.substring(1));
                        idx.html(`${dig - 1}`);
                        $(this).attr('id', `R${dig - 1}`);
                    }
                });

                $(this).closest('tr').remove();

                swal({
                    title: "Item successfully deleted",
                    type: "success"
                });

                $(this).closest('tr').remove();

                swal({
                    title: "Item successfully deleted",
                    type: "success"
                });

                if ($('#tbldetailpr tbody').children().children().length == 0) {
                    $('#tbldetailpr tbody').append(emptyRow);
                } else {
                    sumQty();
                    sumGranTotal();
                }

                function sumQty() {
                    var sumQty = parseInt(0);
                    var getTotalQty = document.getElementsByClassName("row-qty");
                    for (var i = 0; i < getTotalQty.length; i++) {
                        var totalqty = getTotalQty[i].innerText;
                        //var totalqty = getTotalQty[i].lastElementChild.defaultValue;
                        sumQty = sumQty + parseInt(totalqty);
                    }
                    $('.productTotalQty').text(sumQty);
                }

                function sumGranTotal() {
                    var sumGrandTotal = parseInt(0);
                    var getTotal = document.getElementsByClassName("row-total");
                    for (var i = 0; i < getTotal.length; i++) {
                        var subtotal = getTotal[i].innerText;
                        sumGrandTotal = sumGrandTotal + parseFloat(subtotal);
                    }
                    $('.productGrandTotal').text(sumGrandTotal);
                }

            });

            //Save button click function
            $('#submit').click(function () {
                var isAllValid = true;
                var detailItemDone = [];
                var detailDone = {};
                var UserApprove1Id = $('#UserApprove1Id').find(":selected").val();
                var UserApprove2Id = $('#UserApprove2Id').find(":selected").val();
                var UserApprove3Id = $('#UserApprove3Id').find(":selected").val();                
                var TermOfPayment = $('#TermOfPaymentId').find(":selected").val();

                var detailTable = $('#tbldetailpr tbody').children().children().length / 10;
                var detailProdukList = document.getElementById("produklist").options.length - 1;

                if (detailTable == detailProdukList) {
                    $("#tbldetailpr").find("tbody").children("tr").each(function (index, element) {
                        //***Penggunaan nama detail harus sesuai dengan nama pada table. Misal kodeproduk,namaproduk,dst harus sama.
                        detailDone.productnumber = $(element).find(".detProductNumber").val();
                        detailDone.productname = $(element).find(".detProductName").val();
                        detailDone.Supplier = $(element).find(".detSupplier").val();
                        detailDone.measurement = $(element).find(".detMeasurement").val();
                        detailDone.qty = $(element).find(".detQty").val();
                        detailDone.price = $(element).find(".detPrice").val();
                        detailDone.discount = $(element).find(".detDiscount").val();
                        detailDone.subtotal = $(element).find(".detSubTotal").val();
                        detailItemDone.push(detailDone);
                        detailDone = {};
                    });

                    var PurchaseOrderId = $('#poList').val();
                    var PurchaseOrderNumber = $('#PurchaseOrderNumber').val();
                    var PurchaseRequestId = $('#PurchaseRequestId').val();
                    var PurchaseRequestNumber = $('#PurchaseRequestNumber').val();
                    var ExpiredDate = $('#ExpiredDate').val();
                    var UserAccessId = $('#UserAccessId').val();
                    var UserApprove1Id = $('#UserApprove1Id').val();
                    var UserApprove2Id = $('#UserApprove2Id').val();
                    var UserApprove3Id = $('#UserApprove3Id').val();
                    var ApproveStatusUser1 = $('#ApproveStatusUser1').val();
                    var ApproveStatusUser2 = $('#ApproveStatusUser2').val();
                    var ApproveStatusUser3 = $('#ApproveStatusUser3').val();
                    var TermOfPaymentId = $('#TermOfPaymentId').val();
                    var Status = $('#Status').val();
                    var QtyTotal = $('.productTotalQty').text();
                    var GrandTotal = $('.productGrandTotal').text();
                    var Note = $('#Note').val();
                    var PurchaseOrderDetail = detailItemDone;

                    if (isAllValid) {
                        var dataPost = {};
                        dataPost.PurchaseOrderId = PurchaseOrderId;
                        dataPost.PurchaseOrderNumber = PurchaseOrderNumber;
                        dataPost.PurchaseRequestId = PurchaseRequestId;
                        dataPost.PurchaseRequestNumber = PurchaseRequestNumber;
                        dataPost.ExpiredDate = ExpiredDate;
                        dataPost.UserAccessId = UserAccessId;
                        dataPost.UserApprove1Id = UserApprove1Id;
                        dataPost.UserApprove2Id = UserApprove2Id;
                        dataPost.UserApprove3Id = UserApprove3Id;
                        dataPost.ApproveStatusUser1 = ApproveStatusUser1;
                        dataPost.ApproveStatusUser2 = ApproveStatusUser2;
                        dataPost.ApproveStatusUser3 = ApproveStatusUser3;
                        dataPost.TermOfPaymentId = TermOfPaymentId;
                        dataPost.Status = Status;
                        dataPost.QtyTotal = QtyTotal;
                        dataPost.GrandTotal = GrandTotal;
                        dataPost.Note = Note;
                        dataPost.PurchaseOrderDetails = PurchaseOrderDetail;

                        $(this).val('In process...');

                        $.post("@Url.Action("GenerateNewPo", "PurchaseOrder")", { model: dataPost },
                            function (data) {
                                window.location.href = data.redirectToUrl;
                            }
                        );
                    }
                } 
                else 
                {
                    swal({
                        title: "Warning",
                        text: "The number of items entered is not the same, please check again !!!",
                        type: "warning"
                    });
                }                
            });
        });
    </script>

    <style>
        span.error {
            display: block;
            visibility: hidden;
            color: red;
            font-size: 90%;
        }

        tr.error {
            background-color: rgba(255,0,0,0.35);
        }

        /*css for table*/
        .container td {
            vertical-align: top;
        }

        .tablecontainer table {
            width: 100%;
            border-collapse: collapse;
            border-top: 1px solid #BFAEAE;
            border-right: 1px solid #BFAEAE;
        }

        .tablecontainer th {
            border-bottom: 2px solid #BFAEAE;
        }

        .tablecontainer th, .tablecontainer td {
            text-align: center;
            border-left: 1px solid #BFAEAE;
            padding: 5px;
            border-bottom: 1px solid #BFAEAE;
        }

        .ui-widget {
            font-size: 12px !important;
        }
    </style>
}