@{
    ViewData["Title"] = "Add Role Menu";
    Layout = "~/Views/Shared/_TopNavbarMasterData.cshtml";
}

@using Microsoft.AspNetCore.Identity;
@using PurchasingSystemStaging.Models;
@using PurchasingSystemStaging.Areas.MasterData.ViewModels;

@inject Microsoft.AspNetCore.Identity.SignInManager<ApplicationUser> signInManager
@model IEnumerable<dynamic>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- Card Header -->
        <div class="card card-cyan">
            <div class="card-header">
                <h3 class="card-title" style="color:#ffffff"><b>@ViewBag.Title</b></h3>
                <div class="card-tools"></div>
            </div>

            <!-- Form Role Creation -->
            @{
                var user = await signInManager.UserManager.FindByNameAsync(User.Identity.Name);
            }
            @if (user?.Email == "admin@admin.com")
            {
                <form id="createRoleForm" asp-controller="GroupRole" asp-action="CreateRoleNavbar" method="post">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">
                                        <input type="text" name="roleName" class="form-control" required placeholder="Role Name" />
                                    </h3>
                                    <h3 class="card-title">
                                        <select name="normalized" class="form-control select2bs4" style="width: 100%;" data-placeholder="--Choose Department--">
                                            <option value="" hidden disabled selected>--Choose Group--</option>
                                            <option value="Master Data">Master Data</option>
                                            <option value="Purchase Request">Purchase Request</option>
                                        </select>
                                    </h3>
                                    <div class="card-tools">
                                        <button type="submit" class="btn btn-primary bg-indigo float-left fw-bold">
                                            Create
                                        </button>
                                    </div>
                                </div>
                                <!-- /.card-header -->
                            </div>
                            <!-- /.card -->
                        </div>
                    </div>
                </form>
            }

            <!-- Card Body for Role Menus -->
            <div class="row mt-3">
                <div class="col-md-4" id="div1">
                    <a href="#" class="btn bg-info btn-block mb-3">All Role Menu</a>
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Menu</h3>
                            <div class="card-tools">
                                <button type="button" class="btn btn-success float-left fw-bold" id="moveButton">
                                    Move All
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <ul class="nav nav-pills flex-column" id="folderList"></ul>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>

                <!-- Form for Create Group -->
                <div class="col-md-4" id="div2">
                    <a href="#" class="btn btn-primary btn-block mb-3">Create Group</a>
                    <div class="card">
                        <form enctype="multipart/form-data" asp-controller="GroupRole" asp-action="CreateRole" method="post">
                            <div class="card-header">
                                <h3 class="card-title">
                                    <select id="DepartmentList" name="DepartemenId" class="form-control select2bs4" style="width: 100%;" data-placeholder="--Choose Department--">
                                        <option value="" hidden disabled selected>--Choose Department--</option>
                                    </select>
                                </h3>
                                <div class="card-tools">
                                    <button type="submit" class="btn btn-primary bg-indigo float-left fw-bold">
                                        <i class="fas fa-plus blue-icon"></i> Add
                                    </button>
                                </div>
                            </div>
                            <div class="card-body p-0">
                                <ul class="nav nav-pills flex-column" id="newFolderList">
                                    <!-- Elements to be moved here -->
                                </ul>
                            </div>
                            <!-- /.card-body -->
                        </form>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </div>
</section>
<!-- /.content -->
<!-- Script Section -->
<script src="~/admin/dist/js/signalr.min.js"></script>
<script>
    // Fungsi untuk menginisialisasi SignalR
    function initSignalR() {
        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

        connection.start()
            .then(() => console.log("SignalR connected."))
            .catch(err => console.error(err.toString()));

        connection.on("UpdateDataCount", () => roleData());
    }

    // Fungsi untuk memindahkan elemen antara dua div
    function moveToDiv2(itemId) {
        const item = document.getElementById(itemId);
        const newList = document.getElementById('newFolderList');
        const originalList = document.getElementById('folderList');
        const iconElement = document.querySelector(`#${itemId} span i`);

        const departmentSelect = document.getElementById('DepartmentList');
        if (departmentSelect.value !== '0') {
            if (originalList.contains(item)) {
                newList.appendChild(item);
                iconElement.classList.replace('fa-plus', 'fa-times');
            } else {
                originalList.appendChild(item);
                iconElement.classList.replace('fa-times', 'fa-plus');
            }
        }
    }

    // Fungsi untuk mengambil data roles berdasarkan Departemen
    function roleData(DepId) {
        $.ajax({
            url: '@Url.Action("LoadRoles", "GroupRole")',
            method: 'GET',
            data: { DepId: DepId },
            success: function (data) {
                $('#folderList').empty();
                $('#newFolderList').empty();

                // Proses roles untuk department yang sesuai
                $.each(data.rolesForDepartment, function (index, role) {
                    $('#folderList').append(`
                                <li class="nav-item" id="${role.name}">
                                    <input type="hidden" name="RoleId" value="${role.id}">
                                    <a href="#" class="nav-link" onclick="moveToDiv2('${role.name}')">
                                        <i class="fas fa-inbox"></i> ${role.name}
                                        <span class="float-right" id="inboxIcon"></span>
                                    </a>
                                </li>
                            `);
                });

                // Proses roles untuk department yang tidak sesuai
                $.each(data.rolesNotForDepartment, function (index, role) {
                    $('#newFolderList').append(`
                                <li class="nav-item" id="${role.name}">
                                    <input type="hidden" name="RoleId" value="${role.id}">
                                    <a href="#" class="nav-link" onclick="moveToDiv2('${role.name}')">
                                        <i class="fas fa-inbox"></i> ${role.name}
                                        <span class="float-right" id="inboxIcon"></span>
                                    </a>
                                </li>
                            `);
                });
            },
            error: function (xhr, status, error) {
                console.error('Error getting roles:', error);
            }
        });
    }

    // Fungsi untuk mengambil data Departemen
    function departemenData() {
        $.ajax({
            url: '@Url.Action("LoadDepartemen", "GroupRole")',
            method: 'GET',
            success: function (data) {
                $('#DepartmentList').empty().append('<option value="0">--Choose Department--</option>');
                $.each(data, function (index, department) {
                    $('#DepartmentList').append(`
                                <option value="${department.departmentId}">${department.departmentName}</option>
                            `);
                });

                // Tambahkan event listener untuk dropdown departemen
                $('#DepartmentList').change(function () {
                    var selectedDepartmentId = $(this).val();
                    console.log("Selected Department ID:", selectedDepartmentId);
                    roleData(selectedDepartmentId);
                });
            },
            error: function (xhr, status, error) {
                console.error('Error loading departments:', error);
            }
        });
    }

    // Fungsi untuk mengirim data form
    function submitRoleForm(form) {
        var formData = form.serialize();

        $.ajax({
            type: 'POST',
            url: form.attr('action'),
            data: formData,
            success: function (response) {
                if (response.success) {
                    alert('Role created successfully!');
                } else {
                    alert('Error: ' + response.message);
                }
                form.find('input[name="roleName"]').val(''); // Mengosongkan input roleName
                form.find('select[name="normalized"]').prop('selectedIndex', 0);
            },
            error: function (xhr, status, error) {
                alert('An error occurred: ' + error);
            }
        });
    }

    // Inisialisasi saat document siap
    $(document).ready(function () {
        initSignalR();
        roleData();
        departemenData();

        $('#createRoleForm').submit(function (e) {
            e.preventDefault(); // Mencegah form dari pengiriman standar
            submitRoleForm($(this));
        });
    });

    // Event listener untuk tombol move
    document.getElementById('moveButton').addEventListener('click', function (event) {
        event.preventDefault();
        const folderList = document.getElementById('folderList');
        const newFolderList = document.getElementById('newFolderList');

        const departmentSelect = document.getElementById('DepartmentList');
        if (departmentSelect.value !== '0') {
            // Pindahkan semua elemen <li> dari folderList ke newFolderList
            while (folderList.firstChild) {
                newFolderList.appendChild(folderList.firstChild);
            }
        }
    });
</script>
