// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchasingSystem.Data;

#nullable disable

namespace PurchasingSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240919073050_updateColumnApprovalDateAndTimeNull")]
    partial class updateColumnApprovalDateAndTimeNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BankId");

                    b.ToTable("MstBank", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("MstCategory", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentId");

                    b.ToTable("MstDepartment", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Discount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("MstDiscount", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.DueDate", b =>
                {
                    b.Property<Guid>("DueDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DueDateId");

                    b.ToTable("MstDueDate", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.InitialStock", b =>
                {
                    b.Property<Guid>("InitialStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AverageRequest")
                        .HasColumnType("int");

                    b.Property<string>("CalculateBaseOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenerateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LeadTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxRequest")
                        .HasColumnType("int");

                    b.Property<Guid?>("PrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrincipalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("InitialStockId");

                    b.HasIndex("LeadTimeId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId");

                    b.ToTable("MstInitialStock", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.LeadTime", b =>
                {
                    b.Property<Guid>("LeadTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LeadTimeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeadTimeValue")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("LeadTimeId");

                    b.ToTable("MstLeadTime", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Measurement", b =>
                {
                    b.Property<Guid>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MeasurementCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasurementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MeasurementId");

                    b.ToTable("MstMeasurement", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Position", b =>
                {
                    b.Property<Guid>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PositionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("MstPosition", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Principal", b =>
                {
                    b.Property<Guid>("PrincipalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Handphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PrincipalId");

                    b.ToTable("MstPrincipal", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BufferStock")
                        .HasColumnType("int");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Cogs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxStock")
                        .HasColumnType("int");

                    b.Property<Guid?>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MinStock")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RackNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WarehouseLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("WarehouseLocationId");

                    b.ToTable("MstProduct", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.TermOfPayment", b =>
                {
                    b.Property<Guid>("TermOfPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermOfPaymentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermOfPaymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TermOfPaymentId");

                    b.ToTable("MstTermOfPayment", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.UnitLocation", b =>
                {
                    b.Property<Guid>("UnitLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UnitLocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UnitLocationId");

                    b.HasIndex("UnitManagerId");

                    b.ToTable("MstUnitLocation", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.UserActive", b =>
                {
                    b.Property<Guid>("UserActiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Handphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserActiveCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserActiveId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("MstUserActive", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", b =>
                {
                    b.Property<Guid>("WarehouseLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarehouseLocationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WarehouseManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WarehouseLocationId");

                    b.HasIndex("WarehouseManagerId");

                    b.ToTable("MstWarehouseLocation", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.Approval", b =>
                {
                    b.Property<Guid>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatusUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproveBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DueDateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserApproveId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApprovalId");

                    b.HasIndex("DueDateId");

                    b.HasIndex("PurchaseRequestId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("UserApproveId");

                    b.ToTable("OrdApproval", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DueDateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TermOfPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserApprove1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserApprove2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserApprove3Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("DueDateId");

                    b.HasIndex("PurchaseRequestId");

                    b.HasIndex("TermOfPaymentId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("UserApprove1Id");

                    b.HasIndex("UserApprove2Id");

                    b.HasIndex("UserApprove3Id");

                    b.ToTable("OrdPurchaseOrder", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<Guid>("PurchaseOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<Guid?>("QtyDifferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceiveOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseOrderDetailId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("QtyDifferenceId");

                    b.HasIndex("ReceiveOrderId");

                    b.ToTable("OrdPurchaseOrderDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseRequest", b =>
                {
                    b.Property<Guid>("PurchaseRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApproveStatusUser1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproveStatusUser2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproveStatusUser3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Department1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Department2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Department3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DueDateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Position1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Position2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Position3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TermOfPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserApprove1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserApprove2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserApprove3Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PurchaseRequestId");

                    b.HasIndex("Department1Id");

                    b.HasIndex("Department2Id");

                    b.HasIndex("Department3Id");

                    b.HasIndex("DueDateId");

                    b.HasIndex("Position1Id");

                    b.HasIndex("Position2Id");

                    b.HasIndex("Position3Id");

                    b.HasIndex("TermOfPaymentId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("UserApprove1Id");

                    b.HasIndex("UserApprove2Id");

                    b.HasIndex("UserApprove3Id");

                    b.ToTable("OrdPurchaseRequest", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseRequestDetail", b =>
                {
                    b.Property<Guid>("PurchaseRequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseRequestDetailId");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("OrdPurchaseRequestDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.QtyDifferenceRequest", b =>
                {
                    b.Property<Guid>("QtyDifferenceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HeadPurchasingManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HeadWarehouseManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QtyDifferenceApproveBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("QtyDifferenceApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("QtyDifferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("QtyDifferenceRequestId");

                    b.HasIndex("HeadPurchasingManagerId");

                    b.HasIndex("HeadWarehouseManagerId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("QtyDifferenceId");

                    b.HasIndex("UserAccessId");

                    b.ToTable("OrdQtyDifferenceRequest", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Transaction.Models.UnitRequest", b =>
                {
                    b.Property<Guid>("UnitRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("WarehouseApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehouseLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UnitRequestId");

                    b.HasIndex("UnitLocationId");

                    b.HasIndex("UnitRequestManagerId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("WarehouseApprovalId");

                    b.HasIndex("WarehouseLocationId");

                    b.ToTable("TscUnitRequest", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Transaction.Models.UnitRequestDetail", b =>
                {
                    b.Property<Guid>("UnitRequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<Guid?>("UnitRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UnitRequestDetailId");

                    b.HasIndex("UnitRequestId");

                    b.ToTable("TscUnitRequestDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ApprovalRequest", b =>
                {
                    b.Property<Guid>("ApprovalRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("WarehouseApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseApproveBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalRequestId");

                    b.HasIndex("UnitLocationId");

                    b.HasIndex("UnitRequestId");

                    b.HasIndex("UnitRequestManagerId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("WarehouseApprovalId");

                    b.ToTable("WrhApprovalRequest", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", b =>
                {
                    b.Property<Guid>("QtyDifferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CheckedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HeadPurchasingManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HeadWarehouseManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QtyDifferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("QtyDifferenceId");

                    b.HasIndex("CheckedById");

                    b.HasIndex("HeadPurchasingManagerId");

                    b.HasIndex("HeadWarehouseManagerId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("WrhQtyDifference", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.QtyDifferenceDetail", b =>
                {
                    b.Property<Guid>("QtyDifferenceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QtyDifferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QtyOrder")
                        .HasColumnType("int");

                    b.Property<int>("QtyReceive")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("QtyDifferenceDetailId");

                    b.HasIndex("QtyDifferenceId");

                    b.ToTable("WrhQtyDifferenceDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrder", b =>
                {
                    b.Property<Guid>("ReceiveOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceiveById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReceiveOrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ReceiveOrderId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("ReceiveById");

                    b.ToTable("WrhReceiveOrder", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrderDetail", b =>
                {
                    b.Property<Guid>("ReceivedOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyOrder")
                        .HasColumnType("int");

                    b.Property<int>("QtyReceive")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReceiveOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ReceivedOrderDetailId");

                    b.HasIndex("ReceiveOrderId");

                    b.ToTable("WrhReceiveOrderDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequest", b =>
                {
                    b.Property<Guid>("WarehouseRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("QtyTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("WarehouseApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehouseLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseRequestId");

                    b.HasIndex("UnitLocationId");

                    b.HasIndex("UnitRequestId");

                    b.HasIndex("UnitRequestManagerId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("WarehouseApprovalId");

                    b.HasIndex("WarehouseLocationId");

                    b.ToTable("WrhWarehouseRequest", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequestDetail", b =>
                {
                    b.Property<Guid>("WarehouseRequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("QtySent")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WarehouseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WarehouseRequestDetailId");

                    b.HasIndex("WarehouseRequestId");

                    b.ToTable("WrhWarehouseRequestDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransfer", b =>
                {
                    b.Property<Guid>("WarehouseTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("QtyTotal")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitRequestManagerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAccessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("WarehouseApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehouseLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WarehouseRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseRequestNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseTransferNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseTransferId");

                    b.HasIndex("UnitLocationId");

                    b.HasIndex("UnitRequestManagerId");

                    b.HasIndex("UserAccessId");

                    b.HasIndex("WarehouseApprovalId");

                    b.HasIndex("WarehouseLocationId");

                    b.HasIndex("WarehouseRequestId");

                    b.ToTable("WrhWarehouseTransfer", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransferDetail", b =>
                {
                    b.Property<Guid>("WarehouseTransferDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("QtySent")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WarehouseTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WarehouseTransferDetailId");

                    b.HasIndex("WarehouseTransferId");

                    b.ToTable("WrhWarehouseTransferDetail", "dbo");
                });

            modelBuilder.Entity("PurchasingSystem.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("KodeUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PurchasingSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PurchasingSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PurchasingSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.InitialStock", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.LeadTime", "LeadTime")
                        .WithMany()
                        .HasForeignKey("LeadTimeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LeadTime");

                    b.Navigation("Principal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Position", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Product", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", "WarehouseLocation")
                        .WithMany()
                        .HasForeignKey("WarehouseLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Discount");

                    b.Navigation("Measurement");

                    b.Navigation("Principal");

                    b.Navigation("WarehouseLocation");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.UnitLocation", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UnitManager")
                        .WithMany()
                        .HasForeignKey("UnitManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UnitManager");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.UserActive", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "WarehouseManager")
                        .WithMany()
                        .HasForeignKey("WarehouseManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WarehouseManager");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.Approval", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.DueDate", "DueDate")
                        .WithMany()
                        .HasForeignKey("DueDateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseRequest", "PurchaseRequest")
                        .WithMany()
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove")
                        .WithMany()
                        .HasForeignKey("UserApproveId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("DueDate");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("UserApprove");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseOrder", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.DueDate", "DueDate")
                        .WithMany()
                        .HasForeignKey("DueDateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseRequest", "PurchaseRequest")
                        .WithMany()
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.TermOfPayment", "TermOfPayment")
                        .WithMany()
                        .HasForeignKey("TermOfPaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove1")
                        .WithMany()
                        .HasForeignKey("UserApprove1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove2")
                        .WithMany()
                        .HasForeignKey("UserApprove2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove3")
                        .WithMany()
                        .HasForeignKey("UserApprove3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("DueDate");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("TermOfPayment");

                    b.Navigation("UserApprove1");

                    b.Navigation("UserApprove2");

                    b.Navigation("UserApprove3");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseOrderDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", null)
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("QtyDifferenceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrder", null)
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("ReceiveOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseRequest", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Department", "Department1")
                        .WithMany()
                        .HasForeignKey("Department1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Department", "Department2")
                        .WithMany()
                        .HasForeignKey("Department2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Department", "Department3")
                        .WithMany()
                        .HasForeignKey("Department3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.DueDate", "DueDate")
                        .WithMany()
                        .HasForeignKey("DueDateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Position", "Position1")
                        .WithMany()
                        .HasForeignKey("Position1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Position", "Position2")
                        .WithMany()
                        .HasForeignKey("Position2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.Position", "Position3")
                        .WithMany()
                        .HasForeignKey("Position3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.TermOfPayment", "TermOfPayment")
                        .WithMany()
                        .HasForeignKey("TermOfPaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove1")
                        .WithMany()
                        .HasForeignKey("UserApprove1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove2")
                        .WithMany()
                        .HasForeignKey("UserApprove2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UserApprove3")
                        .WithMany()
                        .HasForeignKey("UserApprove3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Department1");

                    b.Navigation("Department2");

                    b.Navigation("Department3");

                    b.Navigation("DueDate");

                    b.Navigation("Position1");

                    b.Navigation("Position2");

                    b.Navigation("Position3");

                    b.Navigation("TermOfPayment");

                    b.Navigation("UserApprove1");

                    b.Navigation("UserApprove2");

                    b.Navigation("UserApprove3");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseRequestDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PurchaseRequestDetails")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.QtyDifferenceRequest", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "HeadPurchasingManager")
                        .WithMany()
                        .HasForeignKey("HeadPurchasingManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "HeadWarehouseManager")
                        .WithMany()
                        .HasForeignKey("HeadWarehouseManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", "QtyDifference")
                        .WithMany()
                        .HasForeignKey("QtyDifferenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("HeadPurchasingManager");

                    b.Navigation("HeadWarehouseManager");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("QtyDifference");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Transaction.Models.UnitRequest", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UnitLocation", "UnitLocation")
                        .WithMany()
                        .HasForeignKey("UnitLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UnitRequestManager")
                        .WithMany()
                        .HasForeignKey("UnitRequestManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "WarehouseApproval")
                        .WithMany()
                        .HasForeignKey("WarehouseApprovalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", "WarehouseLocation")
                        .WithMany()
                        .HasForeignKey("WarehouseLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("UnitLocation");

                    b.Navigation("UnitRequestManager");

                    b.Navigation("WarehouseApproval");

                    b.Navigation("WarehouseLocation");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Transaction.Models.UnitRequestDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Transaction.Models.UnitRequest", "UnitRequest")
                        .WithMany("UnitRequestDetails")
                        .HasForeignKey("UnitRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UnitRequest");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ApprovalRequest", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UnitLocation", "UnitLocation")
                        .WithMany()
                        .HasForeignKey("UnitLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Transaction.Models.UnitRequest", "UnitRequest")
                        .WithMany()
                        .HasForeignKey("UnitRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UnitRequestManager")
                        .WithMany()
                        .HasForeignKey("UnitRequestManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "WarehouseApproval")
                        .WithMany()
                        .HasForeignKey("WarehouseApprovalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("UnitLocation");

                    b.Navigation("UnitRequest");

                    b.Navigation("UnitRequestManager");

                    b.Navigation("WarehouseApproval");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", b =>
                {
                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("CheckedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "HeadPurchasingManager")
                        .WithMany()
                        .HasForeignKey("HeadPurchasingManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "HeadWarehouseManager")
                        .WithMany()
                        .HasForeignKey("HeadWarehouseManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("HeadPurchasingManager");

                    b.Navigation("HeadWarehouseManager");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.QtyDifferenceDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", "QtyDifference")
                        .WithMany("QtyDifferenceDetails")
                        .HasForeignKey("QtyDifferenceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("QtyDifference");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrder", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Order.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ReceiveById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrderDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrder", "ReceiveOrder")
                        .WithMany("ReceiveOrderDetails")
                        .HasForeignKey("ReceiveOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ReceiveOrder");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequest", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UnitLocation", "UnitLocation")
                        .WithMany()
                        .HasForeignKey("UnitLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Transaction.Models.UnitRequest", "UnitRequest")
                        .WithMany()
                        .HasForeignKey("UnitRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UnitRequestManager")
                        .WithMany()
                        .HasForeignKey("UnitRequestManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "WarehouseApproval")
                        .WithMany()
                        .HasForeignKey("WarehouseApprovalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", "WarehouseLocation")
                        .WithMany()
                        .HasForeignKey("WarehouseLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("UnitLocation");

                    b.Navigation("UnitRequest");

                    b.Navigation("UnitRequestManager");

                    b.Navigation("WarehouseApproval");

                    b.Navigation("WarehouseLocation");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequestDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequest", "WarehouseRequest")
                        .WithMany("WarehouseRequestDetails")
                        .HasForeignKey("WarehouseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WarehouseRequest");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransfer", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UnitLocation", "UnitLocation")
                        .WithMany()
                        .HasForeignKey("UnitLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "UnitRequestManager")
                        .WithMany()
                        .HasForeignKey("UnitRequestManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserAccessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.UserActive", "WarehouseApproval")
                        .WithMany()
                        .HasForeignKey("WarehouseApprovalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.MasterData.Models.WarehouseLocation", "WarehouseLocation")
                        .WithMany()
                        .HasForeignKey("WarehouseLocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequest", "WarehouseRequest")
                        .WithMany()
                        .HasForeignKey("WarehouseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("UnitLocation");

                    b.Navigation("UnitRequestManager");

                    b.Navigation("WarehouseApproval");

                    b.Navigation("WarehouseLocation");

                    b.Navigation("WarehouseRequest");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransferDetail", b =>
                {
                    b.HasOne("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransfer", "WarehouseTransfer")
                        .WithMany("WarehouseTransferDetails")
                        .HasForeignKey("WarehouseTransferId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WarehouseTransfer");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.MasterData.Models.Department", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Order.Models.PurchaseRequest", b =>
                {
                    b.Navigation("PurchaseRequestDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Transaction.Models.UnitRequest", b =>
                {
                    b.Navigation("UnitRequestDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.QtyDifference", b =>
                {
                    b.Navigation("PurchaseOrderDetails");

                    b.Navigation("QtyDifferenceDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.ReceiveOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");

                    b.Navigation("ReceiveOrderDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseRequest", b =>
                {
                    b.Navigation("WarehouseRequestDetails");
                });

            modelBuilder.Entity("PurchasingSystem.Areas.Warehouse.Models.WarehouseTransfer", b =>
                {
                    b.Navigation("WarehouseTransferDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
